<?xml version="1.0" encoding="utf-8"?>
<mx:Canvas label="ANALYSES" xmlns:mx="http://www.adobe.com/2006/mxml" 
	xmlns:boost="boost.charts.*"
	creationComplete="initApp()"
	width="100%" height="100%">
	<mx:Script><![CDATA[
		import mx.rpc.http.HTTPService;
		import mx.rpc.events.ResultEvent;
		import mx.collections.*;
		import mx.charts.*;
		import mx.charts.series.*;
		import mx.charts.renderers.*;
		import mx.charts.events.*;
		import boost.charts.*;

        [Bindable] 	public var urlSrv:String;
        [Bindable] 	public var urlBase:String;
        [Bindable] 	public var idSite:String;
        [Bindable] 	public var idArt:String;
        [Bindable] 	public var idGrille:String;
		[Bindable]	private var rsSocios:Object;
		[Bindable]	private var rsTranches:Object;
		[Bindable]	private var rsTypeLog:Object;
		[Bindable]	private var rsCompoFamille:Object;
		
		private function initApp():void {
			urlBase = "?f=GetStat&site="+idSite+"&idArt="+idArt+"&idGrille="+idGrille
			getXml(urlBase+"&type=socio", setSocio);
			getXml(urlBase+"&type=tranche", setTranche);
			getXml(urlBase+"&type=TypeLog", setTypeLog);
        }
		private function initStat(type:String, callback:Function):void {
			getXml(urlBase+"&type="+type, callback);			
		}

	    private function setSocio(event:ResultEvent):void{	        
	        rsSocios = event.result;
	    }
	    private function setTranche(event:ResultEvent):void{	        
	        rsTranches = event.result;
	    }
	    private function setTypeLog(event:ResultEvent):void{	        
	        rsTypeLog = event.result;
	    }
	    private function setCompoFamille(event:ResultEvent):void{	        
	        rsCompoFamille = event.result;
	        for each (var axe:String in rsCompoFamille.dataset.axe)
	        {
				chartCompoFamille.addAxis(axe);	        	
	        }
			chartCompoFamille.addSeries("SITFAM1",rsCompoFamille.dataset.SITFAM1);				        	
			chartCompoFamille.addSeries("SITFAM2",rsCompoFamille.dataset.SITFAM2);	        	
	    }
			
		private function getXml(param:String, callback:Function):void {

			var strUrl:String = urlSrv+param;
  			var srv:HTTPService = new HTTPService();
  			srv.addEventListener(ResultEvent.RESULT,callback);
  			srv.url=strUrl;
  			srv.send();
			trace ("cnvStat:getXml:strUrl="+strUrl);
	    }


	]]></mx:Script>


	<mx:Accordion x="10" width="100%" height="100%">
		<mx:Canvas label="POPULATION" width="100%" height="100%">
			<mx:Accordion x="10" y="0" width="100%" height="100%">
				<mx:Canvas label="Categories socio-professionnelles" width="100%" height="100%">
					<mx:HBox width="100%" height="100%">
					     <mx:PieChart id="chartSocio" width="100%" height="100%" 
					        dataProvider="{rsSocios.dataset.item}" showDataTips="true" >
					        <mx:series>
					           <mx:PieSeries field="nb" nameField="lib" labelPosition="callout" />
					        </mx:series>
					     </mx:PieChart>
					</mx:HBox>
				</mx:Canvas>
				<mx:Canvas label="Ages des locataires" width="100%" height="100%">
				</mx:Canvas>
				<mx:Canvas id="CompoFamille" label="Composition des familles" width="100%" height="100%">
					<boost:RadarChart creationComplete="initStat('CompoFamille', setCompoFamille);" id="chartCompoFamille" width="100%" height="100%" />
				</mx:Canvas>
				<mx:Canvas label="Nombre de personnes par logement" width="100%" height="100%">
				</mx:Canvas>
				<mx:Canvas label="Provenance des locataires" width="100%" height="100%">
				</mx:Canvas>
				<mx:Canvas label="AnciennetÃ© des locataires" width="100%" height="100%">
				</mx:Canvas>
			</mx:Accordion>
		</mx:Canvas>
		<mx:Canvas label="PATRIMOINE" width="100%" height="100%">
			<mx:Accordion x="10" y="0" width="100%" height="100%">
				<mx:Canvas label="Tranche" width="100%" height="100%">
					<mx:HBox width="100%" height="100%">
					     <mx:PieChart id="chartTranches" width="100%" height="100%" 
					        dataProvider="{rsTranches.dataset.item}" showDataTips="true" >
					        <mx:series>
					           <mx:PieSeries field="nb" nameField="lib" labelPosition="callout" />
					        </mx:series>
					     </mx:PieChart>
					</mx:HBox>
				</mx:Canvas>
				<mx:Canvas label="ZUS" width="100%" height="100%">
				</mx:Canvas>
				<mx:Canvas label="TYPES DE BATIMENTS" width="100%" height="100%">
				</mx:Canvas>
				<mx:Canvas label="Types de logements" width="100%" height="100%">
					<mx:HBox width="100%" height="100%">
					     <mx:PieChart id="chartTypeLog" width="100%" height="100%" 
					        dataProvider="{rsTypeLog.dataset.item}" showDataTips="true" >
					        <mx:series>
					           <mx:PieSeries field="nb" nameField="lib" labelPosition="callout" />
					        </mx:series>
					     </mx:PieChart>
					</mx:HBox>
				</mx:Canvas>
				<mx:Canvas label="DATE DE CONSTRUCTION" width="100%" height="100%">
				</mx:Canvas>
				<mx:Canvas label="DATE DE REHABILITATION" width="100%" height="100%">
				</mx:Canvas>
				<mx:Canvas label="VACANCES" width="100%" height="100%">
				</mx:Canvas>
			</mx:Accordion>
		</mx:Canvas>
		<mx:Canvas label="PERFORMANCE ENERGIE" width="100%" height="100%">
			<mx:Accordion x="10" y="0" width="100%" height="100%">
				<mx:Canvas label="CHAUFFAGE" width="100%" height="100%">
				</mx:Canvas>
				<mx:Canvas label="DIAGNIOSTIC DE PERFORMANCE" width="100%" height="100%">
				</mx:Canvas>
			</mx:Accordion>
		</mx:Canvas>
	</mx:Accordion>
	
</mx:Canvas>

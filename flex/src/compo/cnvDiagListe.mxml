<?xml version="1.0" encoding="utf-8"?>
<mx:VBox xmlns:mx="http://www.adobe.com/2006/mxml" width="100%" height="100%" 
    creationComplete="init();"   
	paddingTop="3" paddingBottom="3" paddingLeft="3" paddingRight="3"
	> 
            
	<mx:Script>
        <![CDATA[
			import compo.form.affirmations;
			
			import mx.collections.ArrayCollection;
			import mx.containers.HBox;
			import mx.controls.Alert;
			import mx.controls.CheckBox;
			import mx.controls.HRule;
			import mx.controls.Image;
			import mx.controls.Text;
			import mx.managers.CursorManager;
			import mx.managers.PopUpManager;
			import mx.rpc.events.FaultEvent;
			import mx.rpc.events.ResultEvent;
			
			[Bindable] public var titre:String="";
			public var params:Array;
			public var mainCtrlWidth:int;
			public var bForSolus:Boolean=false;
			public var bCheckLieu:Boolean=false;
			public var arrSelectLieu:Array;

			private function init():void{
				if(!params["idCrit"])params["idCrit"]="";
				roDiag.getDiagListe(params,this.parentApplication.idBase);
				setStyleListeDiag();
				if(mainCtrlWidth)mainCtrl.width = mainCtrlWidth;
			}
			
			public function setStyleListeDiag():void{
				switch(params['niv']) {
		            case "0":
						lblTitre.text = "Critères "+params['handi']+"s valides";
						mainCtrl.setStyle("borderColor","green");
		                break;
		            case "1":
						lblTitre.text = "Gène "+getHandiLabelFeminin(params['handi'])+"s mineure";
						mainCtrl.setStyle("borderColor","yellow");
		                break;
		            case "2":
						lblTitre.text = "Gène "+getHandiLabelFeminin(params['handi'])+"s intermédiaire";
						mainCtrl.setStyle("borderColor","#ffa200");
		                break;
		            case "3":
						lblTitre.text = "Gène "+getHandiLabelFeminin(params['handi'])+"s majeure";
						mainCtrl.setStyle("borderColor","red");
		                break;
		        } 
				//lblTitre.text += " "+titreListeDiag;
			}	
			
			private function getHandiLabelFeminin(handi:String):String{
				if(handi=="moteur")handi="moteur";
				if(handi=="visuel")handi="visuelle";
				if(handi=="cognitif")handi="cognitive";
				if(handi=="auditif")handi="auditive";
				return handi;
			}
			
			private function faultHandlerService(fault:FaultEvent, os:String=""):void {
				var str:String;
				str = "Code: "+fault.fault.faultCode.toString()+"\n"+
					"Detail: "+fault.fault.faultDetail.toString()+"\n"+
					"String: "+fault.fault.faultString.toString()+"\n";
				
				if (os!="")
					os = " - "+os;
				Alert.show(str, "FaultHandlerService"+os);
			}
			
			
			protected function getDiagListe_resultHandler(event:ResultEvent):void
			{
				var rsListe:Object = event.result;
				var first:Boolean = true;
				
				//boucle sur les critères
				for each (var rLieu:Object in rsListe)
				{
					//création du conteneur
					var vb:VBox = new VBox;
					vb.percentWidth = 100;

					//vérifie si on affiche pour les solutions
					if(bForSolus && first){
						arrSelectLieu = new Array;
						for each (var crit:Object in rsListe[0])
						{
							if(crit.affirmation && first){
								vb.addChild(addCritere(crit));
								if(bCheckLieu){
									var cb:CheckBox = new CheckBox;
									cb.label = "Appliquer la solution à tous les lieux ?"
									cb.addEventListener(MouseEvent.CLICK,selectAllLieu);	
									//vb.percentHeight = 100;
									vb.addChild(cb);
								}
								first = false;
							}
						}
					}

					//création du fil d'ariane
					var ar:ariane = new ariane;
					ar.NodeData = rLieu["ariane"]["id"][0]["ariane"];
					
					if(bForSolus){
						var hb:HBox = new HBox;
						hb.percentWidth = 100;
						if(bCheckLieu){
							//pour la solution on ajoute une case à cocher
							var cbL:CheckBox = new CheckBox;
							cbL.id = "cbl_"+rLieu[0]["id_diag"];
							arrSelectLieu.push(cbL);
							hb.addChild(cbL);
						}
						hb.addChild(ar);
						vb.addChild(hb);
					}else{
						vb.addChild(ar);	
					}
					
					//affiche les critère si ce n'est pas pour une solution
					if(!bForSolus){
						for each (var crit:Object in rLieu)
						{
							if(crit.affirmation){
								vb.addChild(addCritere(crit));													
							}
						}
					}					
					/*
					var af:affirmations = new affirmations;
					af.NodeData = rLieu;
					vb.addChild(af);
					*/
					mainCtrl.addChild(vb);
				}
			}
			
			function selectAllLieu(e:Object):void{
				for each (var cb:CheckBox in arrSelectLieu)
				{
					cb.selected = true;
				}
			}
			
			function addCritere(crit:Object):VBox
			{
				var larg:int = 20;

				var vb:VBox = new VBox();
				vb.percentWidth = 100;
				
				var txt:Text = new Text();
				txt.text = crit.affirmation;
				txt.percentWidth = 100;
				vb.addChild(txt);
				
				var hb:HBox = new HBox();
				var lblCtrl:Label = new Label();
				lblCtrl.text = crit.controle;
				var lblRef:Label = new Label();
				lblRef.text = crit.ref;
				hb.addChild(lblCtrl);
				hb.addChild(lblRef);
				
				var imaAu:Image = new Image;
				imaAu.source="images/audio"+crit.handicateur_auditif+".jpg";
				imaAu.width = larg;
				imaAu.autoLoad = true;
				hb.addChild(imaAu);
				
				var imaCo:Image = new Image;
				imaCo.source="images/cog"+crit.handicateur_cognitif+".jpg";
				imaCo.width = larg;
				imaCo.autoLoad = true;
				hb.addChild(imaCo);

				var imaMo:Image = new Image;
				imaMo.source = "images/moteur"+crit.handicateur_moteur+".jpg";
				imaMo.width = larg;
				imaMo.autoLoad = true;
				hb.addChild(imaMo);

				var imaVi:Image = new Image;
				imaVi.source="images/visu"+crit.handicateur_visuel+".jpg";
				imaVi.width = larg;
				imaVi.autoLoad = true;
				hb.addChild(imaVi);
				vb.addChild(hb);

				//ajout les droits
				var imaDr:Image = new Image;
				imaDr.source= getImgReg(crit.typeCrit, crit.droitCrit);
				imaDr.autoLoad = true;
				hb.addChild(imaDr);

				vb.addChild(hb);
				var t:HRule = new HRule();
				vb.addChild(t);
				
				return vb;
				
			}

			function getImgReg(type:String, regle:String):String
			{
				/**
				 1	Réglementaire
				 3	Souhaitable
				 **/		
				if(type=="3"){
					type="S";
				}else{
					type="R";
				}
				var path:String = '';
				/**
				 2	ERP_IOP
				 3	ERP_IOP existant
				 4	Travail
				 5	Voirie
				 6	Modalité particulière
				 7	Logement
				 **/
				if(regle=="2"){
					path = type+'ERP.png';
				}
				if(regle=="3"){
					path = type+'ERPexistant.png';
				}
				if(regle=="5"){
					path = type+'VOIRIE.png';
				}
				if(regle=="7"){
					path = type+'LOGEMENT.png';
				}
				if(regle=="4"){
					path = type+'CT.png';
				}
				if(regle=="6"){
					path = type+'MODPART.png';
				}
				if(regle=="2-3" || regle=="2-3-6" || regle=="2-3-6-7" || regle=="2-3-7" || regle=="2-6-7" || regle=="2-7" || regle=="3-6" || regle=="3-6-7"){
					path = type+regle+'.png';
				}		
				if(path==''){
					path = 'check_no.png';
				}
				
				return 'images/'+path;
				//return WEB_ROOT.$path;
				
			}				
			
        ]]>
    </mx:Script>
	<mx:RemoteObject id="roDiag"
					 destination="zend"
					 source="GEVU_Diagnostique"
					 fault="faultHandlerService(event, 'GEVU - Diagnostic');"
					 showBusyCursor="true"
					 >
		<mx:method name="getDiagListe" result="getDiagListe_resultHandler(event)" />
	</mx:RemoteObject>	

	<mx:Label id="lblTitre" fontSize="18" text="{titre}"/>
	<mx:VBox id="mainCtrl" width="100%" height="100%" minHeight="0" borderStyle="solid" paddingTop="3" paddingBottom="3" paddingLeft="3" paddingRight="3">
	</mx:VBox>
</mx:VBox>

<?xml version="1.0" encoding="utf-8"?>
<mx:HBox xmlns:mx="http://www.adobe.com/2006/mxml" xmlns:ns2="compo.*" 
	label="Documents multimédias" 
	creationComplete="AppliVerifIco()"
	>
	<mx:Script>
		<![CDATA[
			import com.google.analytics.debug._Style;
			
			import compo.twPhotoListe;
			
			import mx.collections.ArrayCollection;
			import mx.controls.Alert;
			import mx.controls.Image;
			import mx.controls.LinkButton;
			import mx.events.CloseEvent;
			import mx.events.ListEvent;
			import mx.managers.PopUpManager;
		
      	[Embed(source="/images/jpg.png")] [Bindable] private var PhotoIcon:Class;
      	[Embed(source="/images/mpg.png")] [Bindable] private var FilmIcon:Class;
      	[Embed(source="/images/mp3.png")] [Bindable] private var SonIcon:Class;
		[Embed(source="/images/pdf.png")] [Bindable] private var PdfIcon:Class;
		[Embed(source="/images/kml.png")] [Bindable] private var KmlIcon:Class;
		[Embed(source="/images/doc.jpg")] [Bindable] private var DocIcon:Class;
		[Embed(source="/images/odt.jpg")] [Bindable] private var OdtIcon:Class;
		[Embed(source="/images/xls.jpg")] [Bindable] private var XlsIcon:Class;
		[Embed(source="/images/ods.jpg")] [Bindable] private var OdsIcon:Class;
		[Embed(source="/images/ptt.jpg")] [Bindable] private var PttIcon:Class;
		[Embed(source="/images/odg.jpg")] [Bindable] private var OdgIcon:Class;

		public var idRub:String;
		public var idSite:String;
		public var urlExeAjax:String;
		public var rsEtatDiag:Object;
		public var photo:Boolean;
		public var film:Boolean;
		public var son:Boolean;
		public var doc:Boolean;
		public var kml:Boolean;
		private var urlPdf:String;
		private var rsDocs:Object;
		private var rsTofs:ArrayCollection = new ArrayCollection();
		private var rsFilms:ArrayCollection = new ArrayCollection();
		private var rsSons:ArrayCollection = new ArrayCollection();
		[Bindable] public var dataIcons:ArrayCollection = new ArrayCollection();
		[Bindable] public var nbColo:int = 6;
	
		
		public function Init(EtatDiag:Object, Rub:String, Site:String, Ajax:String):void {	
			idRub=Rub;
			idSite=Site;
			urlExeAjax=Ajax;
			rsEtatDiag=EtatDiag;
		}

		public function initDoc(rs:Object):void {
			rsDocs = rs;
			dataIcons.removeAll();
			rsTofs.removeAll();
	
			for each (var d:Object in rsDocs)
			{
				//vérifie le type de fichier
				var ext:String = d.titre;
				ext = ext.substring(ext.length-3);
				var img:Image = new Image;
				var obj:Object = new Object;
				if(d.content_type == "application/octet-stream"){
					if(ext=="doc" || ext=="ocx"){
						d.vignette = DocIcon;
						dataIcons.addItem(d);
					}else if(ext=="kml" || ext=="kmz"){						
						d.vignette = KmlIcon;
						dataIcons.addItem(d);
						this.parentApplication.cartoIF.callChargeKml(d.url);
						kml = true;
					}else if(ext=="pdf"){
						d.vignette = PdfIcon;
						dataIcons.addItem(d);							
					}else if(ext=="mp3"){
						//on ajoute s'une seule fois l'icone
						if(rsFilms.length==0){
							obj.vignette = FilmIcon;
							obj.titre = "sons";
							dataIcons.addItem(d);							
						}
						rsFilms.addItem(d);
					}else if(ext=="flv"){
						//on ajoute s'une seule fois l'icone
						if(rsFilms.length==0){
							obj.vignette = FilmIcon;
							obj.titre = "film";
							dataIcons.addItem(obj);							
						}
						rsFilms.addItem(d);
					}else if(ext=="odt"){
						d.vignette = OdtIcon;
						dataIcons.addItem(d);							
					}else if(ext=="xls" || ext=="lsx" || ext=="csv"){
						d.vignette = XlsIcon;
						dataIcons.addItem(d);							
					}else if(ext=="ods"){
						d.vignette = OdsIcon;
						dataIcons.addItem(d);							
					}else if(ext=="ppt" || ext=="ptt"){
						d.vignette = PttIcon;
						dataIcons.addItem(d);							
					}else if(ext=="odg" || ext=="odp"){
						d.vignette = OdgIcon;
						dataIcons.addItem(d);							
					}else if(ext=="jpg" || ext=="png" || ext=="gif"){
						/*on ajoute s'une seule fois l'icone
						if(rsTofs.length==0){
							obj.vignette = PhotoIcon;
							obj.titre = "images";
							dataIcons.addItem(obj);							
						}
						//création de la propriété vignette
						var newurl:String = d.url.replace("prob_","vig_prob_");
						newurl = d.url.replace("lieux_","vig_lieux_");
						d.vignette = newurl;						
						rsTofs.addItem(d);
						*/
						d.vignette = PhotoIcon;
						dataIcons.addItem(d);							
					}
				}				
				if(d.content_type == "application/x-zip"){
					if(ext=="ptx"){
						d.vignette = PttIcon;
						dataIcons.addItem(d);							
					}
					if(ext=="lsx"){
						d.vignette = XlsIcon;
						dataIcons.addItem(d);							
					}
					if(ext=="kml" || ext=="kmz"){						
						d.vignette = KmlIcon;
						dataIcons.addItem(d);
						this.parentApplication.cartoIF.callChargeKml(d.url);
						kml = true;
					}
				}
				if(d.content_type == "application/pdf"){
					d.vignette = PdfIcon;
					dataIcons.addItem(d);							
				}
				if(d.content_type == "image/png" || d.content_type == "image/jpeg"){
					d.vignette = PhotoIcon;
					dataIcons.addItem(d);							
				}
				if(d.content_type == "application/vnd.google-earth.kml+xml kml"){
					d.vignette = KmlIcon;
					dataIcons.addItem(d);
					this.parentApplication.cartoIF.callChargeKml(d.url);
					kml = true;
				}
				if(d.content_type == "text/xml" && ext=="kml"){
					d.vignette = KmlIcon;
					dataIcons.addItem(d);
					this.parentApplication.cartoIF.callChargeKml(d.url);
					kml = true;
				}
			}
		}
			
		public function VerifIco():Boolean{
	    	//bug dans le cas où il n'y a qu'une icone
	    	var nbIco:int = rsEtatDiag.EtatDiag.icones[1].icone.length;
	    	if(nbIco != 0){
	        	//accDocs.visible=true;
	        	if(nbIco == 1){
		        	var ico1:Object = rsEtatDiag.EtatDiag.icones[1].icone;
		        	showIcone(ico1.toString());	        		        		
	        	}else{
			        for each (var ico:Object in rsEtatDiag.EtatDiag.icones[1].icone)
			        {
			        	showIcone(ico);	        	
			        }
	        	}
	        }
	        //vérifie qu'au moins une icone est affichée
	        if(photo||film||son||doc){
	        	return true;
	        }else{
	        	return false;
	        }
      	}

	public function AppliVerifIco():void{
    	
		/*
		if(photo)
    		imgPhoto.visible=true;
    	if(film)
    		imgFilm.visible=true;
    	if(son)
    		imgSon.visible=true;      			
		if(doc)
			imgDoc.visible=true;
		*/
		var toto:String = "";
		
	}

      public function showIcone(ico:Object):void{
    	if(ico.id=="images")
    		photo=true;
    	if(ico.id=="videos")
    		film=true;
    	if(ico.id=="sons")
    		son=true;      	
		if(ico.id=="docs"){
			doc = true;
			urlPdf = ico.value;
		}
		if(ico.id=="kml"){
			doc = true;
			urlPdf = ico.value;
		}
      }
        

     private function ShowListePhoto():void {
		 
		if(rsTofs){
			var tw:twListePhoto = twListePhoto(
				PopUpManager.createPopUp(this, twListePhoto, false));
			tw.dataTofs = rsTofs;
			PopUpManager.centerPopUp(tw);			
		}else{
			// Create a non-modal TitleWindow container.
			var wPhotoListe:twPhotoListe = twPhotoListe(
				PopUpManager.createPopUp(this, twPhotoListe, false));
			var params:Object = new Object();
			params.f = "GetImages";
			params.id = idRub;
			params.site = idSite;
			trace ("ShowListePhoto:url="+urlExeAjax+"?f="+params.f+"&id="+params.id+"&site="+params.site);
			wPhotoListe.useHttpService(urlExeAjax,params,"");
			PopUpManager.centerPopUp(wPhotoListe);			
		}
		 

     }
	
	private function go(url:String):void {
		var targetURL:URLRequest = new URLRequest (url);
		navigateToURL(targetURL, "_blank");
	}
			
     private function ShowListeFilm():void {

     }
			
     private function ShowListeSon():void {

     }
	private function ShowHideKml(url:String):void {
		if(!kml){
			this.parentApplication.cartoIF.callFunction("showKml",url);
			//boxKml.setStyle("backgroundColor",colorOn);
			kml=true;
		}else{
			this.parentApplication.cartoIF.callFunction("clearKml",url);
			//boxKml.setStyle("backgroundColor",colorOff);
			kml=false;			
		}
	}
			
			protected function listTypeDocs_clickHandler(event:ListEvent):void
			{
				// TODO Auto-generated method stub
				var item:Object = dataIcons.getItemAt(event.columnIndex);
				
				if(item.content_type == "application/vnd.google-earth.kml+xml kml"){
					ShowHideKml(item.url);
				}else if(item.vignette == PhotoIcon){
					this.parentApplication.imgLieux.source = item.url;
				}else{
					go(item.url);
				}
				
			}
			private function deleteLieu():void {
				
				if (listTypeDocs.selectedItem)
				{
					Alert.show("ATTENTION cette action va suprimmer le document !\n" +
						"Confirmez-vous la suppression ?",
						"Confirmation Suppression", 3, this, deleteLieuClickHandler);
				}else{
					Alert.show("Veuillez sélectionner un document à supprimer","Supprimer le document");		
				}
				
			}
			private function deleteLieuClickHandler(event:CloseEvent):void
			{
				if (event.detail == Alert.YES) 
				{
					this.parentApplication.roDiagnostique.deleteDoc(listTypeDocs.selectedItem.id_doc, this.parentApplication.idBase);
				}
			}			
		]]>
  </mx:Script>
		<mx:VBox>
			<ns2:cUploadFile idExi="{this.parentApplication.idExi}" wf="auton" ttBtn="Ajouter un document" id="uf" iconBtn="@Embed('images/AddRecord.png')" ctlBind="{parentApplication}" objName="Models_DbTable_Gevu_docsxlieux" typeFic="All" />
			<mx:LinkButton click="deleteLieu()" icon="@Embed('images/DeleteRecord.png')" toolTip="Supprimer un document" />															
		</mx:VBox>
		<mx:HorizontalList id="listTypeDocs" itemRenderer="compo.render.tofs" dataProvider="{dataIcons}" width="100%"   
			rowHeight="86" columnWidth="60" rowCount="1" columnCount="{nbColo}" itemClick="listTypeDocs_clickHandler(event);" />
</mx:HBox>

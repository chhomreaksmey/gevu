<?xml version="1.0" encoding="utf-8"?>
<mx:Canvas label="Statistiques de diagnostic" xmlns:mx="http://www.adobe.com/2006/mxml" 
	creationComplete="init()" 
	width="100%" height="100%" xmlns:form="compo.form.*" xmlns:compo="compo.*" xmlns:tc="tagcloud.*" xmlns:ns="http://code.google.com/p/flex-iframe/" 
	>
	<mx:Script><![CDATA[
		import compo.cnvDiagListe;
		import compo.twDiagListe;
		
		import mx.charts.HitData;
		import mx.charts.events.ChartEvent;
		import mx.charts.series.ColumnSeries;
		import mx.charts.series.items.ColumnSeriesItem;
		import mx.collections.ArrayCollection;
		import mx.controls.Alert;
		import mx.events.IndexChangedEvent;
		import mx.managers.PopUpManager;
		import mx.rpc.events.FaultEvent;
		import mx.rpc.events.ResultEvent;

		[Embed(source="/images/A.png")] [Bindable] private var AIcon:Class;
		[Embed(source="/images/B.png")] [Bindable] private var BIcon:Class;
		[Embed(source="/images/C.png")] [Bindable] private var CIcon:Class;
		[Embed(source="/images/D.png")] [Bindable] private var DIcon:Class;
		[Embed(source="/images/E.png")] [Bindable] private var EIcon:Class;
		
		[Embed(source="/images/audio.jpg")] [Bindable] private var AudioIcon:Class;
		[Embed(source="/images/cog.jpg")] [Bindable] private var CogIcon:Class;
		[Embed(source="/images/moteur.jpg")] [Bindable] private var MoteurIcon:Class;
		[Embed(source="/images/visu.jpg")] [Bindable] private var VisuIcon:Class;

		private var handi:Object = 
			{ "A": {
				"color": 0xFF0000,
				"icon": AIcon,
				"markers": []}, 
				"B": {
					"color": 0x0000FF,
					"icon": BIcon,
					"markers": []},
				"C": {
					"color": 0x0000FF,
					"icon": CIcon,
					"markers": []},
				"D": {
					"color": 0x0000FF,
					"icon": DIcon,
					"markers": []},
				"E": {
					"color": 0x0000FF,
					"icon": EIcon,
					"markers": []}
			};

		[Bindable]	public var rsEtatDiag:Object;
		[Bindable]	public var rsDiagExt:Object;
		[Bindable]	public var idLieu:int;
		[Bindable]	public var idDiagExt:int;
		public var selectHandi:String;
		public var selectNiv:String;
		[Bindable]	public var rsAuditif:ArrayCollection;
		[Bindable]	public var rsCognitif:ArrayCollection;
		[Bindable]	public var rsMoteur:ArrayCollection;
		[Bindable]	public var rsVisuel:ArrayCollection;		
		
		public function init():void {
			//details.removeAllChildren();
			if(rsDiagExt){
				idDiagExt = rsDiagExt.id_diagext;
				gmEnt.keyValue = rsDiagExt.id_entreprise;
				gmEnt.init();
				tiSource.text=rsDiagExt.source;
				cbAuditif.selectedIndex = getLettreIndex(rsDiagExt.auditif);
				cbCognitif.selectedIndex = getLettreIndex(rsDiagExt.cognitif);
				cbMoteur.selectedIndex = getLettreIndex(rsDiagExt.moteur);
				cbVisuel.selectedIndex = getLettreIndex(rsDiagExt.visuel);								
			}else{
				tiSource.text="";
				cbAuditif.selectedIndex = 0;
				cbCognitif.selectedIndex = 0;
				cbMoteur.selectedIndex = 0;
				cbVisuel.selectedIndex = 0;								
				gmEnt.cb.selectedIndex = -1;
			}
			//tc.goTagGo();
			callChangeGeo("");
			TraiteEtatDiag();
		}
		
		public function getLettreIndex(lettre:String):int
		{
			var i:int = 0;
			for each (var l:String in acLettre)
			{
				if(l==lettre)return i;
				i++;
			}
			return i;	
		}

		public function TraiteEtatDiag():void {
			
			//mise à jour du taux de calcul
			//TauxCalc.text = "Taux de calcul : "+rsEtatDiag.EtatDiag.TauxCalc;
			var rs:Array = new Array;
			statGevu.visible = true;
			if(cbSou.selected && cbReg.selected)
				rs = rsEtatDiag.EtatDiag;
			else if(cbReg.selected)
				rs = rsEtatDiag.EtatDiag1;
			else if(cbSou.selected)
				rs = rsEtatDiag.EtatDiag3;
			else if(!cbSou.selected && !cbReg.selected)
				statGevu.visible = false;
			
			
			//mise à jour des icones handicateur
			for each (var obs:Object in rs)
			{
				if(obs.id=="moteur"){
					imgAlphaMoteur.source=handi[obs.handi].icon;
					rsMoteur = new ArrayCollection([
						{label:"Critères valides", value:obs.niv0, niv:0},
						{label:"Obstacles niveau 1", value:obs.niv1, niv:1},
						{label:"Obstacles niveau 2", value:obs.niv2, niv:2},
						{label:"Obstacles niveau 3", value:obs.niv3, niv:3},
					]);
				}
				if(obs.id=="auditif"){
					imgAlphaAudio.source=handi[obs.handi].icon;
					rsAuditif = new ArrayCollection([
						{label:"Critères valides", value:obs.niv0, niv:0},
						{label:"Obstacles niveau 1", value:obs.niv1, niv:1},
						{label:"Obstacles niveau 2", value:obs.niv2, niv:2},
						{label:"Obstacles niveau 3", value:obs.niv3, niv:3},
					]);
				}
				if(obs.id=="cognitif"){
					imgAlphaCog.source=handi[obs.handi].icon;
					rsCognitif = new ArrayCollection([
						{label:"Critères valides", value:obs.niv0, niv:0},
						{label:"Obstacles niveau 1", value:obs.niv1, niv:1},
						{label:"Obstacles niveau 2", value:obs.niv2, niv:2},
						{label:"Obstacles niveau 3", value:obs.niv3, niv:3},
					]);
				}
				if(obs.id=="visuel"){
					imgAlphaVisu.source=handi[obs.handi].icon;
					rsVisuel = new ArrayCollection([
						{label:"Critères valides", value:obs.niv0, niv:0},
						{label:"Obstacles niveau 1", value:obs.niv1, niv:1},
						{label:"Obstacles niveau 2", value:obs.niv2, niv:2},
						{label:"Obstacles niveau 3", value:obs.niv3, niv:3},
						]);
				}
			}

		}
					
		protected function chart_changeHandler(event:Event):void
		{
			try 
			{

				var vn:Array = new Array();
				vn["niv"] = this.selectNiv;
				vn["handi"] = this.selectHandi;
				vn["idLieu"] = this.idLieu;
				vn["reg"] = 0;
				if(cbReg.selected)
					vn["reg"] = 1;
				else if(cbSou.selected)
					vn["reg"] = 3;
				
				details.removeAllChildren();
				var cnvListe:cnvDiagListe = new cnvDiagListe();
				cnvListe.params = vn;
				cnvListe.tcFunction = callChangeGeo;
				//cnvListe.mainCtrlWidth = 100;
				details.addChild(cnvListe);
				
				
				/** il y a avait un bug à cause de la propagation de l'événement au canvas
				 * merci à http://riaflex.blogspot.fr/2008/02/chartitemeventchange-in-conflict-with.html
				**/
				event.stopImmediatePropagation();				
			} 
			catch (err:Error) 
			{ 
				var t:String = "";
			} 			
			
		}
		
		public function dtFuncA(e:HitData):String {			
			selectHandi = "auditif";
			selectNiv = e.item.niv;
			return getOverString(e.item.label, e.item.value, rsAuditif);
		}

		public function dtFuncC(e:HitData):String {			
			selectHandi = "cognitif";
			selectNiv = e.item.niv;
			return getOverString(e.item.label, e.item.value, rsCognitif);
		}

		public function dtFuncM(e:HitData):String {			
			selectHandi = "moteur";
			selectNiv = e.item.niv;
			return getOverString(e.item.label, e.item.value, rsMoteur);
		}

		public function dtFuncV(e:HitData):String {			
			selectHandi = "visuel";
			selectNiv = e.item.niv;
			return getOverString(e.item.label, e.item.value, rsVisuel);
		}
		
		protected function getOverString(label:String, nb:Number, rs:ArrayCollection):String
		{
			var tot:Number = Number(rs[0].value)+Number(rs[1].value)+Number(rs[2].value)+Number(rs[3].value);
			var pourcent:Number =  Math.round((100/tot)*nb);
			var s:String;
			s = "<FONT COLOR='#050505'>"+selectHandi+"</FONT>\n";
			s += "<FONT COLOR='#050505'>" +label+" : "+nb+" ("+pourcent+" %)</FONT>\n";
			s += "<FONT COLOR='#050505'>TOTAL = "+tot+"</FONT>";
			return s;			
		}
		
		
		protected function enrDiagExt_clickHandler(event:MouseEvent):void
		{
			var arrParams:Array = new Array();
			arrParams["id_entreprise"]=gmEnt.cb.selectedItem.id_entreprise;
			arrParams["source"]=tiSource.text;
			arrParams["auditif"]=cbAuditif.selectedLabel;
			arrParams["cognitif"]=cbCognitif.selectedLabel;
			arrParams["moteur"]=cbMoteur.selectedLabel;
			arrParams["visuel"]=cbVisuel.selectedLabel;				
			if(idDiagExt){
				ro.edit(idDiagExt, arrParams, "Models_DbTable_Gevu_diagext",this.parentApplication.idBase);
			}else{
				arrParams["id_lieu"]=idLieu;				
				ro.ajoutDiagExt(arrParams, this.parentApplication.idExi, this.parentApplication.idBase);					
			}
		}
		
		protected function saveDiagExt_resultHandler(event:ResultEvent):void
		{
			idDiagExt = event.result as int;
			
		}

		private function faultHandlerService(fault:FaultEvent, os:String=""):void {
			var str:String;
			str = "Code: "+fault.fault.faultCode.toString()+"\n"+
				"Detail: "+fault.fault.faultDetail.toString()+"\n"+
				"String: "+fault.fault.faultString.toString()+"\n";
			
			if (os!="")
				os = " - "+os;
			Alert.show(str, "FaultHandlerService"+os);
		}
		
		protected function edit_resultHandler(event:ResultEvent):void
		{
			// TODO Auto-generated method stub
			
		}
		protected function filtreSouReg_changeHandler(event:Event):void
		{
			TraiteEtatDiag();	
		}

		public function callChangeGeo(txt:String):void {		
			tcIFrame.callIFrameFunction('changeTagCloud', [txt]);
		}
		
	]]></mx:Script>
	<mx:RemoteObject id="ro"
					 source="GEVU_Diagnostique" destination="zend" 
					 showBusyCursor="true"
					 fault="faultHandlerService(event, this.label);"			
					 >
		<mx:method name="ajoutDiagExt" result="saveDiagExt_resultHandler(event)" />
		<mx:method name="edit" result="edit_resultHandler(event)" />
	</mx:RemoteObject>

	
	<mx:ArrayCollection id="acLettre">
		<mx:String>-</mx:String>
		<mx:String>A</mx:String>
		<mx:String>B</mx:String>
		<mx:String>C</mx:String>
		<mx:String>D</mx:String>
	</mx:ArrayCollection>
	
	<!-- Define custom colors for use as fills. -->
	<mx:SolidColor id="sc0" color="green" alpha=".8"/>
	<mx:SolidColor id="sc1" color="yellow" alpha=".8"/>
	<mx:SolidColor id="sc2" color="#ffa200" alpha=".6"/>
	<mx:SolidColor id="sc3" color="red" alpha=".6"/>
	
	<!-- Define custom Strokes for the columns. -->
	<mx:SolidColorStroke id="s0" color="green" weight="2"/>
	<mx:SolidColorStroke id="s1" color="yellow" weight="2"/>
	<mx:SolidColorStroke id="s2" color="#ffa200" weight="2"/>
	<mx:SolidColorStroke id="s3" color="red" weight="2"/>

	<mx:HBox height="100%" width="100%" >
		<mx:VBox label="Diagnostic" height="100%" >
			<mx:Panel title="Diagnotics GEVU" width="100%">
				<mx:HBox verticalAlign="middle" paddingLeft="6" >
					<mx:CheckBox id="cbSou" label="Souhaitable" selected="true" change="filtreSouReg_changeHandler(event)" />		
					<mx:CheckBox id="cbReg" label="Réglementaire" selected="true" change="filtreSouReg_changeHandler(event)" />		
				</mx:HBox>				
				<mx:HBox paddingLeft="6" id="statGevu" >
					<mx:VBox horizontalAlign="center" >
						<mx:Label text="Auditif" />
						<mx:Image id="imgAlphaAudio" source="{BIcon}" width="60" />
						<mx:PieChart id="graphAuditif"
									 dataProvider="{rsAuditif}"
									 showDataTips="true"
									 height="100" width="100"
									 color="black"
									 click="chart_changeHandler(event)"
									 dataTipFunction="dtFuncA"
									 >
							<mx:series>
								<mx:PieSeries
									selectable="true"
									field="value"
									nameField="label"
									labelPosition="inside"
									fills="{[sc0, sc1, sc2, sc3]}"
									/>
							</mx:series>
						</mx:PieChart>
					</mx:VBox>
					<mx:VBox horizontalAlign="center" >
						<mx:Label text="Cognitif" />
						<mx:Image id="imgAlphaCog" source="{BIcon}" width="60" />
						<mx:PieChart id="graphCognitif"
									 dataProvider="{rsCognitif}"
									 showDataTips="true"
									 height="100" width="100"
									 color="black"
									 click="chart_changeHandler(event)"
									 dataTipFunction="dtFuncC"
									 >
							<mx:series>
								<mx:PieSeries
									selectable="true"
									field="value"
									nameField="label"
									labelPosition="inside"
									fills="{[sc0, sc1, sc2, sc3]}"
									/>
							</mx:series>
						</mx:PieChart>
					</mx:VBox>
					<mx:VBox horizontalAlign="center" >
						<mx:Label text="Moteur" />
						<mx:Image id="imgAlphaMoteur" source="{BIcon}" width="60" />
						<mx:PieChart id="graphMoteur"
									 dataProvider="{rsMoteur}"
									 showDataTips="true"
									 height="100" width="100"
									 color="black"
									 click="chart_changeHandler(event)"
									 dataTipFunction="dtFuncM"
									 >
							<mx:series>
								<mx:PieSeries
									selectable="true"
									field="value"
									nameField="label"
									labelPosition="inside"
									fills="{[sc0, sc1, sc2, sc3]}"
									/>
							</mx:series>
						</mx:PieChart>
					</mx:VBox>
					<mx:VBox horizontalAlign="center" >
						<mx:Label text="Visuel" />
						<mx:Image id="imgAlphaVisu" source="{BIcon}" width="60" />
						<mx:PieChart id="graphVisuel"
									 dataProvider="{rsVisuel}"
									 showDataTips="true"
									 height="100" width="100"
									 color="black"
									 click="chart_changeHandler(event)"
									 dataTipFunction="dtFuncV"
									 >
							<mx:series>
								<mx:PieSeries
									selectable="true"
									field="value"
									nameField="label"
									labelPosition="inside"
									fills="{[sc0, sc1, sc2, sc3]}"
									/>
							</mx:series>
						</mx:PieChart>
					</mx:VBox>
				</mx:HBox>
			</mx:Panel>				
			<mx:Panel id="pDiagExt" title="Diagnotics extérieur" width="100%">
				<mx:VBox paddingLeft="6" paddingBottom="3" paddingTop="3" paddingRight="6" width="100%">
					<mx:HBox verticalAlign="middle" width="100%" >
						<mx:VBox horizontalAlign="center" width="100%" >							
							<mx:Label text="auditif" /><mx:ComboBox id="cbAuditif" dataProvider="{acLettre}" />
						</mx:VBox>
						<mx:VBox horizontalAlign="center" width="100%" >							
							<mx:Label text="cognitif" /><mx:ComboBox id="cbCognitif" dataProvider="{acLettre}" />
						</mx:VBox>
						<mx:VBox horizontalAlign="center" width="100%" >							
							<mx:Label text="moteur" /><mx:ComboBox id="cbMoteur" dataProvider="{acLettre}" />
						</mx:VBox>
						<mx:VBox horizontalAlign="center" width="100%" >							
							<mx:Label text="visuel" /><mx:ComboBox id="cbVisuel" dataProvider="{acLettre}" />						
						</mx:VBox>
					</mx:HBox>
					<mx:HBox verticalAlign="middle" width="100%" >
						<mx:Label text="source :" /><mx:TextInput id="tiSource" text="" width="100%"/>
					</mx:HBox>
					<compo:cbGroupeMot id="gmEnt" width="100%" labelName="nom" titre="une entreprise" keyName="id_entreprise" bAjout="false"  objName="Models_DbTable_Gevu_entreprises" />												
					<mx:Button label="Enregistrer" click="enrDiagExt_clickHandler(event)" />
				</mx:VBox>
			</mx:Panel>
			<mx:Panel id="pTC" title="Nuage des mots les plus employés dans les critères" width="100%" height="100%" 
					  horizontalAlign="center" verticalAlign="middle">
				<mx:Canvas id="posixTag" 
						   verticalScrollPolicy="off" horizontalScrollPolicy="off" 
						   width="100%" height="100%">
					<!--
					<tc:TagCloud id="tc"
								 width="{posixTag.width -30}" height="{posixTag.height - 15}"
								 verticalScrollPolicy="off" horizontalScrollPolicy="off"
								 includeInLayout="true" clipContent="true" />
					-->
					<ns:IFrame id="tcIFrame" verticalScrollPolicy="off" horizontalScrollPolicy="off" width="100%" height="100%" 
							   source="tagcloud.html" overlayDetection="true" />	
				</mx:Canvas>
			</mx:Panel>
			
		</mx:VBox>
		<mx:VBox id="details" height="100%" width="100%">			
		</mx:VBox>
	</mx:HBox>	

	
</mx:Canvas>

<?xml version="1.0" encoding="utf-8"?>
<mx:ViewStack xmlns:mx="http://www.adobe.com/2006/mxml" 
	xmlns:ns2="compo.*"
	creationComplete="Init()"
	width="100%" height="100%">
	<mx:Script>
        <![CDATA[
import mx.containers.TitleWindow;
import mx.events.FlexEvent;
import mx.controls.ComboBox;
import mx.containers.Form;
import mx.containers.FormItem;

import mx.collections.ArrayCollection;
import mx.collections.IViewCursor;
import mx.collections.Sort;
import mx.collections.SortField;

import mx.controls.Alert;
import mx.controls.DataGrid;
import mx.controls.dataGridClasses.DataGridColumn;
import mx.controls.listClasses.IDropInListItemRenderer;
import mx.controls.CheckBox;

import mx.events.CloseEvent;
import mx.events.DataGridEvent;

import mx.managers.CursorManager;

import mx.rpc.AsyncToken;
import mx.rpc.events.FaultEvent;
import mx.rpc.events.ResultEvent;
import mx.rpc.http.HTTPService;

import mx.managers.PopUpManager;

import compo.*;

/**
 * paramétrage de l'objet
 */
[Bindable] public var endPoint:String;
[Bindable] public var bInit:Boolean=true;
[Bindable] public var idExi:String;
private var idCritere:int;	


private function selectItem(event:Event):void {
	var item:Object=event.currentTarget.selectedItem;
	if(item){
		idCritere = item.id_critere;
		UpdRef.text=item.ref;
		UpdHandiMoteur.value=item.handicateur_moteur;
		UpdHandiAudi.value=item.handicateur_auditif;
		UpdHandiVisu.value=item.handicateur_visuel;
		UpdHandiCog.value=item.handicateur_cognitif;
		var i:int=UpdTypControle.getIndex(item.LibTypControle);
		UpdTypControle.cb.selectedIndex=i;
		UpdCritere.text=item.criteres;
		UpdAffirmation.text=item.affirmation;
 			
		ROCDr.findByIdCritere(idCritere);
		ROCDe.findByIdCritere(idCritere);
		ROCC.findByIdCritere(idCritere);

	}
}

public function Init():void 
{
    //chargement des données
    if(bInit)RO.getAll();        
}

private function updateItem():void
{
	//création du tableau de valeur
	var vn:Array = new Array();
	vn["ref"] = this.UpdRef.text;
	vn["handicateur_moteur"] = this.UpdHandiMoteur.value;
	vn["handicateur_auditif"] = this.UpdHandiAudi.value;
	vn["handicateur_visuel"] = this.UpdHandiVisu.value;
	vn["handicateur_cognitif"] = this.UpdHandiCog.value;
	vn["id_type_controle"] = this.UpdTypControle.cb.selectedItem['id_type_controle'];
	vn["criteres"] = this.UpdCritere.text;
	vn["affirmation"] = this.UpdAffirmation.text;

	RO.edit(idCritere,vn);	

}

private function insertItem():void {

	//création du tableau de param
	var pArr:Array = new Array;
	var val:String="";
    var frmC:Array = insertForm.getChildren();
	//boucle sur chaque composant du modèle
    for each(var ctl:Object in frmC){
    	//récupère l'identifiant de la valeur
    	var ctlId:String=ctl.id;
		//récupère le contrôle d'édition
		var ctlVal:Object=ctl.getChildAt(0);
		//vérifie le type pour récupérer les modifs
    	if(ctlVal.className=="cbGroupeMot"){
    		val=ctlVal.cb.selectedItem[ctl.id];
    	}
    	if(ctlVal.className=="TextInput" || ctlVal.className=="TextArea"){
    		val=ctlVal.text;
    	}
    	//vérifie si le champ est obligatoire
    	if(!VerifChampOblig(val, ctlVal))return;
    	//incrémente le tableau
		pArr[ctlId]=val;
   	}
   	
	RO.ajouter(pArr);
	
}

private function VerifChampOblig(val:String, ctlVal:Object):Boolean{
	
	if(val!="")return true;

	var verif:Boolean=true;
	
	if(ctlVal.id=="ref"){
		Alert.show("La référence est obligatoire.");
		return false;
	}
	if(ctlVal.id=="lib"){
		Alert.show("Le libellé est obligatoire.");
		return false;
	}
	if(ctlVal.id=="id_type_solution"){
		Alert.show("Le type de solution est obligatoire.");
		return false;
	}
	
	return verif;
}

private function insertItemHandler(e:Object):void
{
    this.selectedChild = view;
    RO.getAll();
}


private function fillGridHandler(e:Object, dg:DataGrid):void
{
	if(!e)return;
    dg.dataProvider = e.result as Array;
}

private function deleteItem():void {
    
    if (dataGrid.selectedItem)
    {
        Alert.show("Confirmez-vous la suppression de cet élément ?",
        "Confirmation Suppression", 3, this, deleteClickHandler);
    }
   
}

private function deleteClickHandler(event:CloseEvent):void
{
    if (event.detail == Alert.YES) 
    {
		RO.remove(idCritere);
    }
}

public function faultHandlerService(fault:FaultEvent):void
{
	Alert.show(fault.fault.faultCode.toString(), "FaultHandlerService");
}
 
public function resultHandlerService(result:ResultEvent):void
{
	RO.getAll();
}

private function DroitHandler(e:Object):void
{
	vsDroit.selectedChild = viewDroit;
    ROCDr.findByIdCritere(idCritere);
}

private function deleteDroit():void {
    
    if (this.dgDroit.selectedItem)
    {
        Alert.show("Confirmez-vous la suppression de ce droit pour ce critère ?",
        "Confirmation Suppression", 3, this, deleteDroitClickHandler);
    }
    
}
private function deleteDroitClickHandler(event:CloseEvent):void
{
    if (event.detail == Alert.YES) 
    {
		ROCDr.remove(dgDroit.selectedItem['id_type_droit']);
    }
}

private function DeficiHandler(e:Object):void
{
	vsDefici.selectedChild = viewDefici;
    ROCDe.findByIdCritere(idCritere);
}

private function deleteDefici():void {
    
    if (this.dgDefici.selectedItem)
    {
        Alert.show("Confirmez-vous la suppression de cette déficience pour ce critère ?",
        "Confirmation Suppression", 3, this, deleteDeficiClickHandler);
    }
    
}
private function deleteDeficiClickHandler(event:CloseEvent):void
{
    if (event.detail == Alert.YES) 
    {
		ROCDe.remove(dgDefici.selectedItem['id_type_deficience']);
    }
}

private function TypeCriHandler(e:Object):void
{
	vsTypeCri.selectedChild = viewTypeCri;
    ROCC.findByIdCritere(idCritere);
}

private function deleteTypeCri():void {
    
    if (this.dgTypeCri.selectedItem)
    {
        Alert.show("Confirmez-vous la suppression de ce type de critère pour ce critère ?",
        "Confirmation Suppression", 3, this, deleteTypeCriClickHandler);
    }
    
}
private function deleteTypeCriClickHandler(event:CloseEvent):void
{
    if (event.detail == Alert.YES) 
    {
		ROCC.remove(dgTypeCri.selectedItem['id_type_critere']);
    }
}


        ]]>
    </mx:Script>
    
	<mx:RemoteObject id="RO"
	    	source="Model_DbTable_Gevu_criteres" destination="zend" 
	    	endpoint="{endPoint}"
	    	showBusyCursor="true"
	    	fault="faultHandlerService(event)">
	 	<mx:method name="getAll"  result="fillGridHandler(event,dataGrid)"/>  	
	 	<mx:method name="edit"  result="resultHandlerService(event)"/>  	
	 	<mx:method name="remove"  result="resultHandlerService(event)"/>  	
	 	<mx:method name="ajouter"  result="insertItemHandler(event)"/>  	
	 	<mx:method name="csv"  result="resultHandlerService(event)"/>  	
	</mx:RemoteObject>

	<mx:RemoteObject id="ROCDr"
	    	source="Model_DbTable_Gevu_criteresxtypesxdroits" destination="zend" 
	    	endpoint="{endPoint}"
	    	showBusyCursor="true"
	    	fault="faultHandlerService(event)">
	 	<mx:method name="findByIdCritere"  result="fillGridHandler(event,dgDroit)"/>  	
	 	<mx:method name="remove"  result="DroitHandler(event)"/>  	
	 	<mx:method name="ajouter"  result="DroitHandler(event)"/>  	
	</mx:RemoteObject>

	<mx:RemoteObject id="ROCDe"
	    	source="Model_DbTable_Gevu_criteresxtypesxdeficiences" destination="zend" 
	    	endpoint="{endPoint}"
	    	showBusyCursor="true"
	    	fault="faultHandlerService(event)">
	 	<mx:method name="findByIdCritere"  result="fillGridHandler(event,dgDefici)"/>  	
	 	<mx:method name="remove"  result="DeficiHandler(event)"/>  	
	 	<mx:method name="ajouter"  result="DeficiHandler(event)"/>  	
	</mx:RemoteObject>

	<mx:RemoteObject id="ROCC"
	    	source="Model_DbTable_Gevu_criteresxtypesxcriteres" destination="zend" 
	    	endpoint="{endPoint}"
	    	showBusyCursor="true"
	    	fault="faultHandlerService(event)">
	 	<mx:method name="findByIdCritere"  result="fillGridHandler(event,dgTypeCri)"/>  	
	 	<mx:method name="remove"  result="TypeCriHandler(event)"/>  	
	 	<mx:method name="ajouter"  result="TypeCriHandler(event)"/>  	
	</mx:RemoteObject>

	<mx:Canvas id="view" width="100%" height="100%">
		<mx:HBox width="100%" height="100%">
			<mx:VBox width="100%" height="100%" >		
				<mx:HBox id="AddDelete" >		
					<mx:LinkButton id="btnAddNew" click="this.selectedChild = insert;" icon="@Embed('images/AddRecord.png')" toolTip="Ajouter un critère" />
					<mx:LinkButton id="btnDelete" click="deleteItem()" icon="@Embed('images/DeleteRecord.png')" toolTip="Supprimer un critère" />
				</mx:HBox>
				<mx:VBox id="fiche" width="100%" >
					<mx:HRule/>				
				</mx:VBox>
				<mx:DataGrid 
					id="dataGrid"
					editable="false"
					resizableColumns="true" 
					click="selectItem(event);"
					textAlign="left"
					width="100%" height="100%"
					>			
					<mx:columns>
						<mx:DataGridColumn visible="false" headerText="id_critere" dataField="id_critere" />
						<mx:DataGridColumn headerText="Référence" dataField="ref" />   					
	   					<mx:DataGridColumn headerText="Type contrôle"  dataField="LibTypControle" />
						<mx:DataGridColumn headerText="H moteur" dataField="handicateur_moteur" />   					
						<mx:DataGridColumn headerText="H auditif" dataField="handicateur_auditif" />   					
						<mx:DataGridColumn headerText="H cognitif" dataField="handicateur_cognitif" />   					
						<mx:DataGridColumn headerText="H visuel" dataField="handicateur_visuel" />   					
	   					<mx:DataGridColumn headerText="Libellé"  dataField="criteres" />
						<mx:DataGridColumn headerText="Affirmation" dataField="affirmation" />									
 					</mx:columns>
				</mx:DataGrid>
				<mx:VBox fontSize="16" width="100%" paddingTop="6" paddingBottom="6" paddingLeft="6" paddingRight="6"  backgroundColor="#1D6E12" backgroundAlpha="0.32">
					<mx:HBox >
						<mx:VBox>
							<mx:Label text="Référence:" />
			            	<mx:TextInput id="UpdRef" />							
						</mx:VBox>
						<mx:VBox>
							<mx:Label text="Type de contrôle:"/>
			            	<ns2:cbGroupeMot id="UpdTypControle" titre="un contrôle" keyName="id_type_controle"  objName="Model_DbTable_Gevu_typesxcontroles" endPoint="{RO.endpoint}" />						
						</mx:VBox>
					</mx:HBox>			
					<mx:HBox >
						<mx:VBox>
							<mx:Label text="Handicateur moteur:" />
							<mx:NumericStepper id="UpdHandiMoteur" stepSize="1" maximum="4"/>						
						</mx:VBox>
						<mx:VBox>
							<mx:Label text="Handicateur auditif:" />
							<mx:NumericStepper id="UpdHandiAudi" stepSize="1" maximum="4"/>						
						</mx:VBox>
						<mx:VBox>
							<mx:Label text="Handicateur Visuel:" />
							<mx:NumericStepper id="UpdHandiVisu" stepSize="1" maximum="4"/>						
						</mx:VBox>
						<mx:VBox>
							<mx:Label text="Handicateur cognitif:" />
							<mx:NumericStepper id="UpdHandiCog" stepSize="1" maximum="4"/>						
						</mx:VBox>
					</mx:HBox>			
					<mx:Label text="Libellé:" />
	            	<mx:TextArea id="UpdCritere" width="100%" height="60" />
					<mx:Label text="Affirmation:" />
	            	<mx:TextArea id="UpdAffirmation" width="100%" height="60" />
					<mx:Button label="Enregistrer" click="updateItem()" />
				</mx:VBox>
			</mx:VBox>
			<mx:VBox id="detail" width="100%" height="100%" paddingTop="6" paddingBottom="6" paddingLeft="6" paddingRight="6"  backgroundColor="#1D6E12" backgroundAlpha="0.32">
				<mx:HBox width="100%" height="100%" >
					<mx:Panel title="Types de droit" width="100%" height="100%" layout="absolute">
						<mx:ViewStack id="vsDroit" width="100%" height="100%">
							<mx:VBox id="viewDroit" width="100%" height="100%" paddingTop="6" paddingBottom="6" paddingLeft="6" paddingRight="6"  >
								<mx:HBox>
									<mx:LinkButton click="vsDroit.selectedChild = insertDroit;" icon="@Embed('images/AddRecord.png')" toolTip="Ajouter un type de droit au critère" />
									<mx:LinkButton click="deleteDroit()" icon="@Embed('images/DeleteRecord.png')" toolTip="Supprimer un type de droit du critère" />							
								</mx:HBox>							
								<mx:DataGrid width="100%" height="100%" id="dgDroit">
									<mx:columns>
										<mx:DataGridColumn headerText="Type de droit" dataField="lib" />
										<mx:DataGridColumn headerText="Id Type droit" dataField="id_type_droit" visible="false"/>
									</mx:columns>
								</mx:DataGrid>					
							</mx:VBox>
							<mx:VBox id="insertDroit" width="100%" height="100%" paddingTop="6" paddingBottom="6" paddingLeft="6" paddingRight="6"  >
								<mx:Label text="Choisissez un type de droit:"/> 
				            	<ns2:cbGroupeMot titre="un type de droit" keyName="id_type_droit" id="cbDroit" objName="Model_DbTable_Gevu_typesxdroits" endPoint="{RO.endpoint}" />
								<mx:HBox>
									<mx:Button label="Enregistrer" click="ROCDr.ajouter(idCritere,cbDroit.cb.selectedItem['id_type_droit']);" />
									<mx:Button label="Annuler" click="vsDroit.selectedChild = viewDroit;" />				
								</mx:HBox>							
							</mx:VBox>
						</mx:ViewStack>											
					</mx:Panel>
				</mx:HBox>						
				<mx:HBox width="100%" height="100%" >
					<mx:Panel title="Types de déficience" width="100%" height="100%" layout="absolute">
						<mx:ViewStack id="vsDefici" width="100%" height="100%">
							<mx:VBox id="viewDefici" width="100%" height="100%" paddingTop="6" paddingBottom="6" paddingLeft="6" paddingRight="6"  >
								<mx:HBox>
									<mx:LinkButton click="vsDefici.selectedChild = insertDefici;" icon="@Embed('images/AddRecord.png')" toolTip="Ajouter un type de déficience au critère" />
									<mx:LinkButton click="deleteDefici()" icon="@Embed('images/DeleteRecord.png')" toolTip="Supprimer un type de déficience du critère" />							
								</mx:HBox>							
								<mx:DataGrid width="100%" height="100%" id="dgDefici">
									<mx:columns>
										<mx:DataGridColumn headerText="Type de déficience" dataField="lib" />
										<mx:DataGridColumn headerText="Id Type déficience" dataField="id_type_deficience" visible="false"/>
									</mx:columns>
								</mx:DataGrid>					
							</mx:VBox>
							<mx:VBox id="insertDefici" width="100%" height="100%" paddingTop="6" paddingBottom="6" paddingLeft="6" paddingRight="6"  >
								<mx:Label text="Choisissez un type de déficience:"/> 
				            	<ns2:cbGroupeMot titre="un type de déficience" keyName="id_type_deficience" id="cbDefici" objName="Model_DbTable_Gevu_typesxdeficiences" endPoint="{RO.endpoint}" />
								<mx:HBox>
									<mx:Button label="Enregistrer" click="ROCDe.ajouter(idCritere,cbDefici.cb.selectedItem['id_type_deficience']);" />
									<mx:Button label="Annuler" click="vsDefici.selectedChild = viewDefici;" />				
								</mx:HBox>							
							</mx:VBox>
						</mx:ViewStack>											
					</mx:Panel>
				</mx:HBox>						
				<mx:HBox width="100%" height="100%" >
					<mx:Panel title="Types de critère" width="100%" height="100%" layout="absolute">
						<mx:ViewStack id="vsTypeCri" width="100%" height="100%">
							<mx:VBox id="viewTypeCri" width="100%" height="100%" paddingTop="6" paddingBottom="6" paddingLeft="6" paddingRight="6"  >
								<mx:HBox>
									<mx:LinkButton click="vsTypeCri.selectedChild = insertTypeCri;" icon="@Embed('images/AddRecord.png')" toolTip="Ajouter un type de critère au critère" />
									<mx:LinkButton click="deleteTypeCri()" icon="@Embed('images/DeleteRecord.png')" toolTip="Supprimer un type de critère du critère" />							
								</mx:HBox>							
								<mx:DataGrid width="100%" height="100%" id="dgTypeCri">
									<mx:columns>
										<mx:DataGridColumn headerText="Type de critère" dataField="lib" />
										<mx:DataGridColumn headerText="Id Type critère" dataField="id_type_critere" visible="false"/>
									</mx:columns>
								</mx:DataGrid>					
							</mx:VBox>
							<mx:VBox id="insertTypeCri" width="100%" height="100%" paddingTop="6" paddingBottom="6" paddingLeft="6" paddingRight="6"  >
								<mx:Label text="Choisissez un type de critere:"/> 
				            	<ns2:cbGroupeMot titre="un type de critère" keyName="id_type_critere" id="cbTypeCri" objName="Model_DbTable_Gevu_typesxcriteres" endPoint="{RO.endpoint}" />
								<mx:HBox>
									<mx:Button label="Enregistrer" click="ROCC.ajouter(idCritere,cbTypeCri.cb.selectedItem['id_type_critere']);" />
									<mx:Button label="Annuler" click="vsTypeCri.selectedChild = viewTypeCri;" />				
								</mx:HBox>							
							</mx:VBox>
						</mx:ViewStack>											
					</mx:Panel>
				</mx:HBox>						
			</mx:VBox>		
		</mx:HBox>

	</mx:Canvas>
	<mx:Canvas id="insert" width="100%" height="100%" >
		<mx:VBox>			
			<mx:Form width="100%" height="100%" id="insertForm">			                    		
	            <mx:FormItem label="Référence:" id="ref" >
	            	<mx:TextInput  />
	            </mx:FormItem>
	            <mx:FormItem label="Type de contrôle:" id="id_type_controle" >
	            	<ns2:cbGroupeMot titre="un contrôle" keyName="id_type_controle"  objName="Model_DbTable_Gevu_typesxcontroles" endPoint="{RO.endpoint}" />						
	            </mx:FormItem>
	            <mx:FormItem label="Handicateur moteur:" id="handicateur_moteur" >
					<mx:NumericStepper stepSize="1" maximum="4"/>						
	            </mx:FormItem>
	            <mx:FormItem label="Handicateur visuel:" id="handicateur_visuel" >
					<mx:NumericStepper stepSize="1" maximum="4"/>						
	            </mx:FormItem>
	            <mx:FormItem label="Handicateur auditif:" id="handicateur_auditif" >
					<mx:NumericStepper stepSize="1" maximum="4"/>						
	            </mx:FormItem>
	            <mx:FormItem label="Handicateur cognitif:" id="handicateur_cognitif" >
					<mx:NumericStepper stepSize="1" maximum="4"/>						
	            </mx:FormItem>
	            <mx:FormItem label="Libellé:" id="criteres" >
	            	<mx:TextArea width="100%" height="60" />
	            </mx:FormItem>
	            <mx:FormItem label="Affirmation:" id="affirmation" >
	            	<mx:TextArea width="100%" height="60" />
	            </mx:FormItem>
			</mx:Form>		
			<mx:HBox>
				<mx:Button label="Enregistrer" click="insertItem()" />
				<mx:Button label="Annuler" click="this.selectedChild = view;" />				
			</mx:HBox>
		</mx:VBox>
	</mx:Canvas>

	 
</mx:ViewStack>

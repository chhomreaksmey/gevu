<?xml version="1.0" encoding="utf-8"?>
<s:Application xmlns:fx="http://ns.adobe.com/mxml/2009"
			   xmlns:s="library://ns.adobe.com/flex/spark"
			   xmlns:mx="library://ns.adobe.com/flex/mx"
			   xmlns:flexiframe="http://code.google.com/p/flex-iframe/"
			   xmlns:gevu="gevu.*"
			   xmlns:alceane="gevu.alceane.*" xmlns:stat="compo.stat.*" xmlns:form="compo.form.*"
			   width="100%" height="100%" 
			   pageTitle="GEVU Alcéane"
			   creationComplete="creationCompleteHandler(event)" xmlns:compo="compo.*" 
			   >
	<fx:Script>
		<![CDATA[
			import mx.collections.ArrayCollection;
			import mx.controls.Alert;
			import mx.events.FlexEvent;
			import mx.events.ListEvent;
			import mx.events.TreeEvent;
			import mx.rpc.events.FaultEvent;
			import mx.rpc.events.ResultEvent;
			
			import spark.events.IndexChangeEvent;

			[Bindable] public var exi:Object;
			[Bindable] public var idExi:String = "";
			[Bindable] public var dataNode:Object;
			[Bindable] public var dataGeo:Object;
			
			[Bindable] public var dataDiag:Object;
			[Bindable] public var bbItems:ArrayCollection;
			

			[Bindable] public var idLieu:int=-1;
			public var nivLieu:int=0;
			public var idBase:String = "gevu_alceane";
			public var idScenar:int = 18;
			//public var urlDomaine:String = "http://176.76.20.19/gevu/";
			public var urlDomaine:String = "http://localhost/gevu/";
			//public var urlDomaine:String = "http://www.gevu.org/";
			//public var urlDomaine:String = "http://krys.alceane.lan/";
			public var urlVide:String = urlDomaine+"public/vide.html";
			[Bindable] public var idAntenne:int=-1; 
			[Bindable] public var idGroupe:int=-1; 
			[Bindable] public var idBat:int=-1; 
			[Bindable] public var idLog:int=-1; 

			private var TreeObject:XML;
			private var xmlTree:XML
			private var arrSelect:Array;
			private var objLieuFind:Array;
			private var urlOptAffCarto:String = "optAffCarto.xml";

			[Bindable] private var xmlOptAff:XML;
				
			public function showKML(params:Array):void
			{
				cartoIF.callChargeKml(params);
			}
			public function hideKML(params:Array):void
			{
				cartoIF.callFunction("clearKml",params);
			}
				
			
			protected function btnRecherche_clickHandler(event:MouseEvent):void
			{
				if(txtRecherche.text)
					roAlceane.findLieu(txtRecherche.text, idBase);
				else
					Alert.show("Veuillez saisir une requête.");
			}
			
			protected function btnIdentifiant_clickHandler(event:MouseEvent):void
			{
				// TODO Auto-generated method stub
				
			}

			public function faultHandlerService(fault:FaultEvent, os:String=""):void {
				var str:String;
				str = "Code: "+fault.fault.faultCode.toString()+"\n"+
					"Detail: "+fault.fault.faultDetail.toString()+"\n"+
					"String: "+fault.fault.faultString.toString()+"\n";
				
				if (os!="")
					os = " - "+os;
				Alert.show(str, "FaultHandlerService"+os);
			}
			private function displayNodeProperties(event:ResultEvent) : void {
				
				dataNode = event.result;
				
				//initialise les tabbox
				bbMain.selectedIndex = 0;
				
				lstAriane.dataProvider =  new ArrayCollection(dataNode["ariane"] as Array);
				dataGeo = dataNode["Models_DbTable_Gevu_geos"] ? dataNode["Models_DbTable_Gevu_geos"][0] : null;
				dataDiag = dataNode["___diagnostics"].diag.stat; 

				this.currentState = "DonGen"+nivLieu;
				if(nivLieu==1)dgAntenne.init();
				if(nivLieu==2)dgGroupe.init(dataNode);
				if(nivLieu==3)dgBat.init(dataNode);
				if(nivLieu==4)dgLog.init(dataNode);

			}			

			private function updateTreeStructure(event:ResultEvent) : void {
				
				if(!event.result) return;
				
				/* get the id of the node */
				var x:XML = <root></root>;
				x.appendChild(event.result);		
				
				var idnoeud:int;
				idnoeud = x.node.attribute("idLieu");
				
				//vérifie si le noeud existe
				var objTree:XMLList = treeAntenne.dataProvider[0].descendants().(@idLieu == idnoeud);
				if(objTree.length()){
					/* add the new real node */
					objTree[0].appendChild(x.node.node);
					
					if(arrSelect){
						//ajoute le noeud à la sélection
						x = treeAntenne.dataProvider[0].descendants().(@idLieu == idnoeud)[0];
						treeAntenne.expandItem(x,true);
						arrSelect.push(x);
						treeAntenne.selectedItems = arrSelect;
					}
					
					/* delete the old fake one */
					delete  treeAntenne.dataProvider[0].descendants().(@idLieu==idnoeud)[0].children()[0];
					
					//conserve les data du tree complet
					xmlTree = treeAntenne.dataProvider[0] as XML;
				}	
			}			
			private function displayReponse(event:ResultEvent) : void {
				
				if(!event.result) return;
				var x:XML = <root></root>;
				x.appendChild(event.result);		
				treeResult.dataProvider=x;
				
			}
			public function treeAntenneInit():void{
				//construction du tree des territoires
				xmlTree = 
					<node idLieu="-1" lib="root" fake="0">
						<node idLieu="1" lib="Alcéane" fake="0">
							<node idLieu="-10"  fake="1" />
						</node>
					</node>;
				treeAntenne.dataProvider=xmlTree;
				roAlceane.getArboAntenne(1,idBase);
				treeAntenne.showRoot=false;
				
			}
			private function treeItemOpened(event:TreeEvent) : void {
				//return;
				if (event.item.node.attribute("fake")==1)
				{
					var i:int = event.item.attribute("idLieu");
					var type:int = event.item.attribute("typeControle");
					var typeNext:int = -1;
					//calcule le type de noeud suivant
					if(type==61)typeNext=45;
					if(type==45)typeNext=62;
					roAlceane.getArboTypeLieu(i, typeNext, idBase);
				}
			}
			private function treeItemClicked(event:ListEvent) : void {
				var i:Object = event.currentTarget.selectedItem;				
				//if(i.attribute("lib")=="Alcéane")return;
				updateOnglet(i.attribute("niv"), i.attribute("idLieu"));
				
			}			

			public function updateOnglet(lieuNiv:int, lieuId:int):void
			{
				if(idLieu>0){
					//affiche les onglets suivant le niveau
					idLieu = lieuId;
					nivLieu = lieuNiv;
					//corrige le niveau du logement
					if(nivLieu == 1)idAntenne = idLieu;
					if(nivLieu == 2){
						idGroupe = idLieu;
					}
					if(nivLieu == 3)idBat = idLieu;
					if(nivLieu > 4){
						nivLieu = 4;
						idLog = idLieu;
					}
					
					roDiagnostique.getNodeRelatedData(idLieu, idExi, idBase, idScenar, nivLieu);
					lstAriane.dataProvider =  null;					
				}
				bbMain.dataProvider = new ArrayCollection(bbItems[nivLieu]);  
				
			}
			
			protected function creationCompleteHandler(event:FlexEvent):void
			{
				//chargement du xml pour les options d'affichage de la carte
				var chargementXML:URLLoader = new URLLoader();// objet de chargement
				var fichier:URLRequest = new URLRequest(urlOptAffCarto);// url du fichier chargé
				chargementXML.addEventListener( Event.COMPLETE, chargementComplet );
				chargementXML.load(fichier);

				bbItems = new ArrayCollection;
				bbItems.addItem(['DONNÉES GÉNÉRALES','CARTE','MÉDIAS','ENJEUX PSP','ACCESSIBILITÉ']);
				bbItems.addItem(['DONNÉES GÉNÉRALES','CARTE','MÉDIAS','ENJEUX PSP','ERP','ACCESSIBILITÉ']);
				bbItems.addItem(['DONNÉES GÉNÉRALES','CARTE','MÉDIAS','ENJEUX PSP','DIAGNOSTICS','ACCESSIBILITÉ']);
				bbItems.addItem(['DONNÉES GÉNÉRALES','MÉDIAS','ENJEUX PSP','DIAGNOSTICS','ACCESSIBILITÉ','TRAVAUX','PLANS','CARNET IMMOPEP']);
				bbItems.addItem(['DONNÉES GÉNÉRALES','MÉDIAS','DIAGNOSTICS','ACCESSIBILITÉ','PLANS']);
				
				bbMain.dataProvider = new ArrayCollection(bbItems[0]);  
				treeAntenneInit();
				idLieu = 1;
				roDiagnostique.getNodeRelatedData(idLieu, idExi, idBase);
				
			}

			// chargement terminé du fichier xml
			protected function chargementComplet(pEvt:Event):void {
				xmlOptAff = new XML( pEvt.target.data );
			}
			
			protected function bbMain_changeHandler(event:IndexChangeEvent):void
			{
				/*
				<s:State name="carte"/>
				<s:State name="medias"/>
				<s:State name="DonGen"/>
				<s:State name="Diag"/>
				<s:State name="Access"/>
				(nivLieu==0 || nivLieu==1) && 
				*/
				if(event.newIndex==0){
					this.currentState = "DonGen"+nivLieu;
					if(nivLieu==1)dgAntenne.init();
					if(nivLieu==2)dgGroupe.init(dataNode);
					if(nivLieu==3)dgBat.init(dataNode);
					if(nivLieu==4)dgLog.init(dataNode);
				}
				if(event.newIndex==1){
					if(nivLieu==3 || nivLieu==4){
						this.currentState = "Medias";
						media.init(dataNode);
					}else{
						this.currentState = "carte";
						if(!treeOptAff.dataProvider)treeOptAff.dataProvider=xmlOptAff;
						cartoIF.callChangeGeo();
					}
				}
				if(event.newIndex==2){
					if(nivLieu==3){
						this.currentState = "PSP";
						psp.idL = dataNode["Models_DbTable_Gevu_batiments"][0]['ref'];
						psp.type = "bat";
						psp.init(0);
					}else if(nivLieu==4){
						this.currentState = "Diag";
						diag.init(dataNode);
					}else{
						this.currentState = "Medias";
						media.init(dataNode);
					}
				}
				if(event.newIndex==3){
					if(nivLieu==0){
						this.currentState = "PSP";
						psp.type = "patri";
						psp.init(0);
					}
					if(nivLieu==1){
						this.currentState = "PSP";
						psp.idL = dataNode["Models_DbTable_Gevu_antennes"][0]['ref'];
						psp.type = "ant";
						psp.init(0);
					}
					if(nivLieu==2){
						this.currentState = "PSP";
						psp.idL = dataNode["Models_DbTable_Gevu_groupes"][0]['ref'];
						psp.type = "grp";
						psp.init(0);
					}
					if(nivLieu==3){
						this.currentState = "PSP";
						psp.idL = dataNode["Models_DbTable_Gevu_batiments"][0]['ref'];
						psp.type = "bat";
						psp.init(0);
					}
					if(nivLieu==4){
						this.currentState = "Access";
						access.rsEtatDiag = dataNode["___diagnostics"].diag.stat;
					}
					if(nivLieu==3){
						this.currentState = "Diag";
						diag.init(dataNode);
					}
				}
				if(event.newIndex==4){
					if(nivLieu==0 || nivLieu==3){
						this.currentState = "Access";
						access.rsEtatDiag = dataNode["___diagnostics"].diag.stat; 
					}
					if(nivLieu==2){
						this.currentState = "Diag";
						diag.init(dataNode);
					}
				}
				if(event.newIndex==5){
					if(nivLieu==1 || nivLieu==2){
						this.currentState = "Access";
						access.rsEtatDiag = dataNode["___diagnostics"].diag.stat; 
					}
				}
				if(event.newIndex==7){
					if(nivLieu==3){
						this.currentState = "Immo";
						interv.NodeData = dataNode["Models_DbTable_Gevu_interventions"]; 
					}
				}
			}
						
		]]>
	</fx:Script>
	<fx:Declarations> 
		<s:RemoteObject
			id="roAlceane"
			destination="zend"
			source="GEVU_Alceane"
			fault="faultHandlerService(event, 'GEVU - Alceane');"
			showBusyCursor="true"
			>
			<s:method name="getArboAntenne"			result="updateTreeStructure(event);" />
			<s:method name="getArboTypeLieu"			result="updateTreeStructure(event);" />
			<s:method name="findLieu"			result="displayReponse(event);" />
		</s:RemoteObject>
		<s:RemoteObject
			id="roDiagnostique"
			destination="zend"
			source="GEVU_Diagnostique"
			fault="faultHandlerService(event, 'GEVU - Diagnostique');"
			showBusyCursor="true"
			>
			<s:method name="getNodeRelatedData"	result="displayNodeProperties(event);" />
			<s:method name="findLieu"			result="displayReponse(event);" />
		</s:RemoteObject>
	</fx:Declarations>
	<fx:Style>
		@namespace s "library://ns.adobe.com/flex/spark";
		@namespace mx "library://ns.adobe.com/flex/mx";

		@font-face {
			src:url("assets/din-bold.ttf");
			fontFamily: DIN-bold;
			embedAsCFF: true;
		}
		@font-face {
			src:url("assets/itc-officina-sans-book.ttf");
			fontFamily: ITC;
			embedAsCFF: true;
		}
		@font-face {
			src:url("assets/itc-officina-sans-bold.ttf");
			fontFamily: ITC;
			fontWeight: bold;
			embedAsCFF: true;
		}
		@font-face {
			src:url("assets/itc-officina-sans-book-italic.ttf");
			fontFamily: ITC;
			fontStyle: italic;
			embedAsCFF: true;
		}
		.logoT {
			fontFamily:DIN-bold;
			fontSize: 64pt;
			color: white;
		}
		.logoST {
			fontFamily:ITC;
			fontSize: 18pt;
			color: white;
			trackingLeft: 0.6;
			trackingRight: 0.6;
		}
		.titreBloc {
			fontFamily:ITC;
			fontSize: 24pt;
			color: white;
		}
		.titreBlocBlack {
			fontFamily:ITC;
			fontSize: 18pt;
			color: black;
		}
		.stitreBlocB {
			fontFamily:ITC;
			fontWeight: bold;
			fontSize: 14pt;
			color: black;
		}
		.stitreBlocW {
			fontFamily:ITC;
			fontSize: 14pt;
			color: white;
		}
		.stitreBloc {
			fontFamily:ITC;
			fontSize: 14pt;
			color: black;
		}
		.stitreBlocI {
			fontFamily:ITC;
			fontSize: 14pt;
			fontStyle: italic;
			color: black;
		}
		.inputText {
			fontFamily:ITC;
			fontSize: 24pt;
			color: black;
		}
		.btnCorner {
			cornerRadius: 10;
		}				
	</fx:Style>
	<s:states>
		<s:State name="DonGen0"/>
		<s:State name="carte"/>
		<s:State name="Medias"/>
		<s:State name="PSP"/>
		<s:State name="DonGen1"/>
		<s:State name="DonGen2"/>
		<s:State name="DonGen3"/>
		<s:State name="DonGen4"/>
		<s:State name="Diag"/>
		<s:State name="Access"/>
		<s:State name="Immo"/>
	</s:states>	
	
	<s:BorderContainer 
		borderColor="black" borderStyle="inset" borderWeight="6" width="100%" height="100%">
		<s:layout>
			<s:VerticalLayout gap="0" />                
		</s:layout>	
			<s:HGroup width="100%" height="100%" gap="0" >
				<s:VGroup width="264" height="100%" gap="0" >
					<s:Group height="108" width="264" >
						<s:Rect height="100%" width="100%" >
							<s:fill><s:SolidColor color="#4B4B4D" /></s:fill>
						</s:Rect>
						<s:VGroup horizontalAlign="center" height="100%" width="100%" toolTip="GEVU - Alcéane - 0.1138" >
							<s:Label paddingTop="0" styleName="logoT" text="Alcéane"/>
							<s:Label paddingTop="-16" paddingLeft="-1" styleName="logoST" text="OPH DE LA VILLE DU HAVRE"/>
						</s:VGroup>				
					</s:Group>
					<s:Group height="36" width="264" >
						<s:Rect height="100%" width="100%" >
							<s:fill><s:SolidColor color="#A49172" /></s:fill>
						</s:Rect>
						<s:VGroup horizontalAlign="center" verticalAlign="middle" height="100%" width="100%" >
							<s:Label styleName="titreBloc" text="RECHERCHE"/>
						</s:VGroup>				
					</s:Group>
					<s:Group height="195" width="264" >
						<s:Rect height="100%" width="100%" >
							<s:fill><s:SolidColor color="#BFB099" alpha="0.7" /></s:fill>
						</s:Rect>
						<s:VGroup height="100%" width="100%" paddingTop="12" paddingLeft="4" paddingRight="4" >
							<s:HGroup verticalAlign="bottom"  >
								<s:Label styleName="stitreBlocB" text="RECHERCHER "/>							
								<s:Label styleName="stitreBloc" text="UN B&#194;TIMENT, UNE ADRESSE..."/>							
							</s:HGroup>
							<s:Label styleName="stitreBlocI" text="Ex : Zampa, ou Bourgogne, ou"/>							
							<s:Label styleName="stitreBlocI" text="95 rue Jules Lecesne, ou Caucriauville..."/>
							<s:HGroup width="100%" height="64" verticalAlign="bottom" >
								<s:TextInput id="txtRecherche" width="100%" height="30" y="100"
											 styleName="inputText"
											 borderColor="black" borderVisible="true" />							
							</s:HGroup>
							<s:HGroup width="100%" height="48" verticalAlign="middle" horizontalAlign="right">
								<s:Button skinClass="skin.btnAlceane" styleName="btnCorner" label="OK" id="btnRecherche" click="btnRecherche_clickHandler(event)" />
							</s:HGroup>
						</s:VGroup>				
					</s:Group>
					<s:Group height="36" width="264" >
						<s:Rect height="100%" width="100%" >
							<s:fill><s:SolidColor color="#A49172" /></s:fill>
						</s:Rect>
						<s:VGroup horizontalAlign="center" verticalAlign="middle" height="100%" width="100%" >
							<s:Label styleName="titreBloc" text="RECHERCHE PAR ANTENNE"/>
						</s:VGroup>				
					</s:Group>
					<s:Group height="100%" width="264" >
						<s:Rect height="100%" width="100%" >
							<s:fill><s:SolidColor color="#BFB099" alpha="0.7" /></s:fill>
						</s:Rect>
						<s:VGroup height="100%" width="100%" paddingTop="12" paddingLeft="4" paddingRight="4" >
							<mx:Tree id="treeAntenne" labelField="@lib" showRoot="false" 
									 height="100%"  width="100%" 
									 itemOpening="treeItemOpened(event);"
									 change="treeItemClicked( event );"
									 horizontalScrollPolicy="on" verticalScrollPolicy="on"
									 />
						</s:VGroup>				
					</s:Group>
					<s:Group height="36" width="264" >
						<s:Rect height="100%" width="100%" >
							<s:fill><s:SolidColor color="#996C88" /></s:fill>
						</s:Rect>
						<s:VGroup horizontalAlign="center" verticalAlign="middle" height="100%" width="100%" >
							<s:Label styleName="titreBloc" text="RESULTAT RECHERCHE"/>
						</s:VGroup>				
					</s:Group>
					<s:Group height="100%" width="264" >
						<s:Rect height="100%" width="100%" >
							<s:fill><s:SolidColor color="#BFB099" alpha="0.7" /></s:fill>
						</s:Rect>
						<s:VGroup height="100%" width="100%" paddingTop="12" paddingLeft="4" paddingRight="4" >
							<mx:Tree id="treeResult" labelField="@lib" showRoot="false" 
									 height="100%"  width="100%"
									 change="treeItemClicked( event );"
									 horizontalScrollPolicy="on" verticalScrollPolicy="on"
									 />
						</s:VGroup>				
					</s:Group>
				</s:VGroup>
				<s:VGroup width="100%" height="100%" >
					<s:Group height="108" width="100%" >
						<s:Rect height="100%" width="100%" >
							<s:fill><s:SolidColor color="#BFB099" alpha="0.7" /></s:fill>
						</s:Rect>
						<s:VGroup height="100%" width="100%" paddingLeft="200" paddingRight="30" paddingTop="20" visible="false">
							<s:Label paddingTop="0" styleName="inputText" text="Identifiant"/>
							<s:HGroup verticalAlign="middle">
								<s:TextInput id="txtIdentifiant" width="400" height="30" 
											 contentBackgroundColor="#A49172"
											 styleName="inputText"
											 borderColor="black" borderVisible="true" />													
								<s:Button skinClass="skin.btnAlceane" styleName="btnCorner" label="Valider" width="100" id="btnIdentifiant" click="btnIdentifiant_clickHandler(event)" />
							</s:HGroup>
						</s:VGroup>				
					</s:Group>
					<s:HGroup paddingLeft="6" paddingTop="-10" width="100%" paddingRight="6">
						<s:ButtonBar
							id="bbMain"
							change="bbMain_changeHandler(event)"
							skinClass="skin.bbAlceane"
							requireSelection="true" 
							width="100%" />
					</s:HGroup>
					<s:VGroup id="gMain" paddingTop="-40" height="100%" width="100%" paddingBottom="6" paddingLeft="6" paddingRight="6" >
						<s:Group width="100%" >
							<s:Rect height="100%" width="100%" >
								<s:fill><s:SolidColor color="white" /></s:fill>
							</s:Rect>
							<s:HGroup height="48" paddingBottom="6" paddingLeft="6" paddingRight="6" paddingTop="6" verticalAlign="middle">
								<s:Label styleName="stitreBloc" text="Vous êtes ici :"/>
								<s:List id="lstAriane" borderVisible="false" itemRenderer="gevu.irAriane" >
									<s:layout>
										<s:HorizontalLayout />
									</s:layout>
								</s:List>
							</s:HGroup>
						</s:Group>
						<alceane:grpDonGenPatrimoine includeIn="DonGen0" width="100%" height="100%" />
						<alceane:grpDonGenAntenne id="dgAntenne" includeIn="DonGen1" idAntenne="{idAntenne}" width="100%" height="100%" />
						<alceane:grpDonGenGroupe id="dgGroupe" includeIn="DonGen2" width="100%" height="100%" />
						<alceane:grpDonGenBat id="dgBat" includeIn="DonGen3" width="100%" height="100%" />
						<alceane:grpDonGenLog id="dgLog" includeIn="DonGen4" width="100%" height="100%" />
						<s:HGroup includeIn="carte" height="100%" width="100%" >
							<s:VGroup height="100%">
								<s:Group height="36" width="264" >
									<s:Rect height="100%" width="100%" >
										<s:fill><s:SolidColor color="#383B71" /></s:fill>
									</s:Rect>
									<s:VGroup horizontalAlign="center" verticalAlign="middle" height="100%" width="100%" >
										<s:Label styleName="titreBloc" text="OPTION D'AFFICHAGE"/>
									</s:VGroup>				
								</s:Group>
								<mx:Tree id="treeOptAff" labelField="@lib" showRoot="false" 
										 height="100%"  width="100%"
										 itemRenderer="gevu.irTreeCheckBox"
										 horizontalScrollPolicy="on" verticalScrollPolicy="on"
										 />
							</s:VGroup>
							<compo:cnvIFCarto id="cartoIF" rsCarto="{dataGeo}" />
						</s:HGroup>
						<alceane:grpDiag id="diag" includeIn="Diag" width="100%" height="100%" />
						<alceane:grpPSP id="psp" includeIn="PSP" width="100%" height="100%" />
						<stat:cnvStatDiag id="access" includeIn="Access" rsDiagExt="{false}" idLieu="{this.idLieu}" width="100%" height="100%" />
						<alceane:grpMedia id="media" includeIn="Medias" width="100%" height="100%" />
						<form:interventions id="interv" includeIn="Immo" bEdit="false" height="100%" width="100%" />

					</s:VGroup>
				</s:VGroup>
			</s:HGroup>
	</s:BorderContainer> 	

</s:Application>

<?xml version="1.0" encoding="utf-8"?>
<s:View xmlns:fx="http://ns.adobe.com/mxml/2009" 
		xmlns:s="library://ns.adobe.com/flex/spark" 
		xmlns:cpnt="cpnt.*"
		title="Solutions" 
		width="100%" height="100%" minHeight="140"
		creationComplete="creationCompleteHandler(event)"
		>
	<fx:Script>
		<![CDATA[
			import mx.collections.ArrayCollection;
			import mx.events.FlexEvent;
			import mx.managers.PopUpManager;
			import mx.rpc.events.FaultEvent;
			import mx.rpc.events.ResultEvent;
						
			import cpnt.alert;
			import cpnt.popSolus;
			
			import skin.btnSupp;
			
			[Bindable] public var idSelect:int=-1; 
			[Bindable] public var idLieu:int; 
			[Bindable] public var idDiag:int; 
			[Bindable] public var idCrit:int; 
			[Bindable] public var idBase:String; 
			[Bindable] public var arrSolus:ArrayCollection;
			[Bindable] public var arrProduit:ArrayCollection;
			[Bindable] public var bAjout:Boolean = true;
			[Bindable] public var bSupp:Boolean = true;
			private var wSolus:popSolus;			
			
			protected function creationCompleteHandler(event:FlexEvent):void
			{
				idDiag = data.id_diag;
				idCrit = data.id_critere;
				idLieu = data.id_lieu;
				init();
			}
			
			public function init():void
			{
				arrSolus = new ArrayCollection;
				arrProduit = new ArrayCollection;
				
				//recherche les solutions pour le diag
				ro.findByIdDiag(idDiag, this.parentApplication.idBase);
				
			}
			
			private function faultHandlerService(fault:FaultEvent, os:String=""):void {
				var str:String;
				str = "Code: "+fault.fault.faultCode.toString()+"\n"+
					"Detail: "+fault.fault.faultDetail.toString()+"\n"+
					"String: "+fault.fault.faultString.toString()+"\n";
				
				if (os!="")
					os = " - "+os;
				var a:alert = new alert;
				a.mess = str;
				if(os)a.titre = os;
				a.open(this, false);
			}
			
			public function btnAjouterClick():void
			{
				PopUpManager.removePopUp(wSolus);	
				if(listSolusFait)listSolusFait.dataProvider = null;
				if(listSolusAfaire)listSolusAfaire.dataProvider = null;
				var vn:Array = getValeurs();
				ro.ajouter(vn,this.parentApplication.idExi,this.parentApplication.idBase);
			}
			
			public function btnModifierClick():void
			{
				PopUpManager.removePopUp(wSolus);
				if(listSolusFait)listSolusFait.dataProvider = null;
				if(listSolusAfaire)listSolusAfaire.dataProvider = null;
				var vn:Array = getValeurs();
				ro.edit(idSelect, vn,this.parentApplication.idBase);
			}
			
			protected function getValeurs():Array
			{
				//création du tableau de valeur
				var vn:Array = new Array();				
				vn["id_diag"] = idDiag;
				if(wSolus.hgCout.solution)
					vn["id_solution"] = wSolus.hgCout.solution.id_solution;
				if(wSolus.hgCout.produit)
					vn["id_produit"] = wSolus.hgCout.produit.id_produit;
				vn["id_cout"] = wSolus.hgCout.cout.id_cout;				
				vn["unite"] = wSolus.hgCout.n_unite.value;				
				vn["pose"] = wSolus.hgCout.n_pose.value;				
				vn["metre_lineaire"] = wSolus.hgCout.n_metre_lineaire.value;				
				vn["metre_carre"] = wSolus.hgCout.n_metre_carre.value;				
				vn["achat"] = wSolus.hgCout.n_achat.value;				
				vn["cout"] = wSolus.hgCout.coutTotal.text;				
				
				return vn;
			}
			
			private function deleteItem():void {
				
				if (listSolusFait.selectedItem)
				{
					var aProcess:alert = new alert();
					aProcess.mess = "Confirmez-vous la suppression de cet élément ?";
					aProcess.titre = 'Confirmation suppression';
					aProcess.fct1 = deleteClickHandler;
					aProcess.open(this, true);
					PopUpManager.centerPopUp(aProcess);					
				}
				
			}
			
			private function deleteClickHandler():void
			{
				ro.remove(idSelect, this.parentApplication.idBase);
			}
																					
			protected function calculerCout():void
			{
				var cg:int = 0;
				for each (var c:Object in arrSolus)
				{
					cg += int(c.dscout);
				}
				this.coutGlobal.text = cg.toString();
				
			}
			
			protected function findByIdDiag_resultHandler(event:ResultEvent):void
			{
				arrSolus = new ArrayCollection(event.result as Array);
				
				if(arrSolus.length){
					currentState = 'fait';
					listSolusFait.dataProvider = new ArrayCollection(event.result as Array);
					calculerCout();
				}else{
					currentState = 'afaire';
					ro.findByIdLieuAFaire(idLieu, this.parentApplication.idBase, idCrit); 
				}
				
			}
			
			
			protected function findByIdLieuAFaire_resultHandler(event:ResultEvent):void
			{
				listSolusAfaire.dataProvider = new ArrayCollection(event.result as Array);
			}
			
			
			protected function findByIdCritere_resultHandler(event:ResultEvent):void
			{
				arrSolus = new ArrayCollection(event.result as Array);
				if(arrSolus.length){
					wSolus = new popSolus();
					wSolus.functionAjout = btnAjouterClick;
					wSolus.bAjout = currentState == 'afaire';
					wSolus.bModif = currentState == 'fait';
					wSolus.arrSolus = arrSolus;
					wSolus.open(this.parentApplication.main,true);   
					PopUpManager.centerPopUp(wSolus);
				}else{
					var aProcess:alert = new alert();
					aProcess.mess = "Aucune solution n'est disponible";
					aProcess.titre = 'Choix des solutions';
					aProcess.open(this, true);
					PopUpManager.centerPopUp(aProcess);					
				}
			}
			
			
			protected function methode_resultHandler(event:ResultEvent):void
			{
				init();				
			}			
			
			protected function listLieuxFait_clickHandler(event:MouseEvent):void
			{
				var item:Object=event.currentTarget.selectedItem;
				if(item){
					idSelect = item.id_diagsolus;
					idDiag = item.id_diag;
					wSolus = new popSolus();
					wSolus.functionModif = btnModifierClick;
					wSolus.bAjout = currentState == 'afaire';
					wSolus.bModif = currentState == 'fait';
					wSolus.arrSolus = arrSolus;
					wSolus.open(this.parentApplication.main,true);   
					PopUpManager.centerPopUp(wSolus);
				}
			}
			
			protected function listLieuxAFaire_clickHandler(event:MouseEvent):void
			{
				var item:Object=event.currentTarget.selectedItem;
				if(!item)return;
				roSolus.findByIdCritere(item.id_critere, true); 
			}
						
		]]>
	</fx:Script>
	<fx:Declarations>
		<s:RemoteObject id="ro"
						 destination="zend"
						 source="Models_DbTable_Gevu_diagnosticsxsolutions"
						 fault="faultHandlerService(event);"
						 showBusyCursor="true" 
						 >
			<s:method name="ajouter" result="methode_resultHandler(event)"	/>
			<s:method name="edit" result="methode_resultHandler(event)"	/>
			<s:method name="remove" result="methode_resultHandler(event)" />
			<s:method name="findByIdDiag" result="findByIdDiag_resultHandler(event)" />
			<s:method name="findByIdLieuAFaire" result="findByIdLieuAFaire_resultHandler(event)" />
		</s:RemoteObject>
		<s:RemoteObject id="roSolus"
						 destination="zend"
						 source="Models_DbTable_Gevu_solutionsxcriteres"
						 fault="faultHandlerService(event);"
						 showBusyCursor="true" 
						 >
			<s:method name="findByIdCritere" result="findByIdCritere_resultHandler(event)" />		
		</s:RemoteObject>		
	</fx:Declarations>
	<s:layout>
		<s:VerticalLayout
			paddingBottom="6"
			paddingLeft="6" 
			paddingRight="6"
			paddingTop="6"
			gap="6"/>                
	</s:layout>	
	<s:states>
		<s:State name="fait"/>
		<s:State name="afaire"/>
	</s:states>	
	
	<s:VGroup includeIn="fait" width="100%" height="100%" >
		<s:HGroup verticalAlign="middle">
			<s:Button skinClass="skin.btnSupp" id="btnDelete" click="deleteItem()"  /><s:Label text="Coût global :" color="red" /><s:Label color="red" text="0" id="coutGlobal"/><s:Label color="red" text="€ H.T."/>
		</s:HGroup>
		<s:List id="listSolusFait" width="100%" height="100%" click="listLieuxFait_clickHandler(event)" labelField="lib" itemRenderer="cpnt.irListSolusFait"  />
	</s:VGroup>
	<s:List includeIn="afaire" id="listSolusAfaire" width="100%" height="100%" click="listLieuxAFaire_clickHandler(event)" labelField="lib" itemRenderer="cpnt.irListSolusAfaire"  />
	
</s:View>

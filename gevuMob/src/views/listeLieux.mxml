<?xml version="1.0" encoding="utf-8"?>
<s:View xmlns:fx="http://ns.adobe.com/mxml/2009" 
		xmlns:s="library://ns.adobe.com/flex/spark" title="" creationComplete="creationCompleteHandler(event)" xmlns:views="views.*" 
		>		
	<fx:Declarations>
	</fx:Declarations>
	<fx:Script>
		<![CDATA[
			import mx.collections.ArrayCollection;
			import mx.collections.IList;
			import mx.events.FlexEvent;
			import mx.managers.PopUpManager;
			
			import spark.transitions.SlideViewTransition;
			
			import cpnt.alert;
						
			public var viewTrans:SlideViewTransition = new SlideViewTransition();	
			private var durTrans:int = 800;

			public var oItem:Object;
			
			protected function goUnivers():void 
			{
				bPrev.visible = false;
				viewTrans.direction = "left";
				viewTrans.mode = "uncover";
				navigator.popToFirstView(viewTrans);
				this.parentApplication.initDetail("");
			}
			
			public function goBack():void 
			{
				if(data.lieu.lib!="Univers"){
					viewTrans.direction = "up";
					//navigator.popView(viewTrans);
					//on recherche l'item
					this.parentApplication.roDiag.getUtiIdLieuLock(this.parentApplication.idExi, data.lieu.lieu_parent, this.parentApplication.idBase);

				}
				this.parentApplication.initDetail("");
			}

			public function suppItem(id:String):void 
			{
				var idx:int=list.dataProvider.getItemIndex(findItem(id,list.dataProvider));
				if(idx>0)list.dataProvider.removeItemAt(idx);
			}

			public function addItem(item:Object):void 
			{
				if(!item)return;
				var o:Object = findItem(item.id_lieu,list.dataProvider);
				if(data && item.id_lieu == data.lieu.id_lieu){
					data.lieu = item;
					this.title = data.lieu.lib;
					tiNom.text = data.lieu.lib;					
					data.liste = new ArrayCollection(item.children as Array);
					list.dataProvider = data.liste;
					oItem = item;
					this.parentApplication.oLieu = oItem;
					return;
				}else if(o!=null){
					var i:int = list.dataProvider.getItemIndex(o);
					list.dataProvider[i]=item;
				}else{
					list.dataProvider.addItem(item);
				}
				oItem = item;
				showItem();
				
			}
			
			public function findItem(id:String, lst:IList):Object
			{
				for each (var i:Object in lst){
					if(i.id_lieu==id)return i;
				}
				return null;
			}

			public function editItem(id:String, key:String, value:String, lst:IList):IList
			{
				for each (var i:Object in lst){
					if(i.id_lieu==id){
						i[key]=value;
					}
				}
				return lst;
			}
			
			protected function creationCompleteHandler(event:FlexEvent):void
			{
				if(data!=null){
					init();
				}else{
					tiNom.text = "";					
				}
				viewTrans.duration = durTrans;
			}
			
			public function init():void
			{
				//affiche le fil d'ariane
				this.title = data.lieu.lib;
				tiNom.text = data.lieu.lib;
				this.parentApplication.oLieu = data.lieu;
				//vérifie si un des enfants n'a pas changé
				if(this.parentApplication.idLieuChange){
					for(var k:String in this.parentApplication.arrLieuChange){
						data.liste = editItem(this.parentApplication.idLieuChange,k,this.parentApplication.arrLieuChange[k],data.liste);
					}					
					this.parentApplication.idLieuChange = "";
				}
				
				//charge la liste
				list.dataProvider = data.liste;
				showButton(data.lieu.tLock);
				if(data.lieu.tLock != "x"){
					this.parentApplication.getDataLieu();
				}
				//affiche les photos
				photo.init();					

			}
			
			protected function list_clickHandler(event:MouseEvent):void
			{
				bPrev.visible = true;
				viewTrans.direction = "down";
				oItem = event.currentTarget.selectedItem;
				if(oItem==null)return;
				if(this.parentApplication.isRun){
					var aProcess:alert = new alert();
					aProcess.mess = "Un traitement est en cours, merci de patienter...";
					aProcess.titre = 'Traitement en cours';
					aProcess.open(this, true);
					PopUpManager.centerPopUp(aProcess);										
				}else{
					showItem();
				}
			}
			
			protected function showItem():void
			{
				this.parentApplication.oLieu = oItem;
				/*vérifie s'il faut charger les enfants du lieu
				if(oItem.children.length > 0){
					viewTrans.direction = "down";
					var oData:Object = {"ariane":this.parentApplication.lblAriane.text,"lieu":oItem,"liste":new ArrayCollection(oItem.children)};
					navigator.pushView(views.listeLieux, oData, viewTrans);									
				}else{
					this.title = oItem.lib;
					tiNom.text = oItem.lib;
					this.parentApplication.lblAriane.text = data.ariane+" / "+data.lieu.lib +" / "+oItem.lib;
					showButton(oItem.tLock);
					//charge les infos liées
					this.parentApplication.getDataLieu();					
				}
				*/
				//on charge à chaque fois une nouvelle vue
				var oData:Object = {"lieu":oItem,"liste":new ArrayCollection(oItem.children)};
				navigator.pushView(views.listeLieux, oData, viewTrans);									
				
			}
			
			protected function showButton(tLock:String):void
			{
				if(data.lieu.lib == "Univers")bPrev.visible = false;
				else bPrev.visible = true;
				if(tLock != "x"){
					this.parentApplication.bCopie.visible = true;
					this.parentApplication.bSupp.visible = true;
					this.parentApplication.bAjout.visible = true;
				}else{
					this.parentApplication.bCopie.visible = false;
					this.parentApplication.bSupp.visible = false;
					this.parentApplication.bAjout.visible = false;
					this.parentApplication.bColle.visible = false;
					hgModifNom.visible = false;
				}

			}
			
			protected function modifier_clickHandler(event:MouseEvent):void
			{
				if(tiNom.text=="")return;
				var modifData:Array = new Array();
				modifData["lib"]=tiNom.text;
				this.parentApplication.changeLieuNom(modifData);
				this.title = tiNom.text;
			}
			
		]]>
	</fx:Script>	
	<s:navigationContent>
		<s:Button label="Univers" click="goUnivers()"/>
	</s:navigationContent>
	<s:actionContent>
		<s:Button id="bPrev" label="Retour" click="goBack()" visible="false" skinClass="skin.btnPrev" />
	</s:actionContent>
	
	<s:VGroup width="100%" height="100%" paddingBottom="4" paddingLeft="4" paddingRight="4" paddingTop="4">
		<s:HGroup verticalAlign="middle" width="100%" id="hgModifNom">
			<s:TextInput id="tiNom" width="100%" /><s:Button label="Modifier" click="modifier_clickHandler(event)" />			
		</s:HGroup>
		<views:photo id="photo" width="100%" objName="Models_DbTable_Gevu_docsxlieux" objId="{this.parentApplication.oLieu.id_lieu}" />
		<s:List id="list" width="100%" height="100%" click="list_clickHandler(event)" itemRenderer="cpnt.irListLieu"  />
	</s:VGroup>  
</s:View>

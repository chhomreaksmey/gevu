<?xml version="1.0" encoding="utf-8"?>
<s:VGroup xmlns:fx="http://ns.adobe.com/mxml/2009" 
		xmlns:s="library://ns.adobe.com/flex/spark" 
		creationComplete="init()" width="100%" height="100%"
		paddingBottom="6" paddingLeft="6" paddingRight="6" paddingTop="6"
		gap="6"
		>
	<fx:Script>
		<![CDATA[
			import skin.indecentmonkey.MobileNumericStepper.itemrenderer.MobileNumStepSkin;
			
			[Bindable]	public var cout:Object;
			[Bindable]	public var coutSolus:Object;
			[Bindable]	public var produit:Object;
			[Bindable]	public var solution:Object;
			[Bindable]	public var bAjout:Boolean=true;
			[Bindable]	public var bModif:Boolean=true;
			[Bindable]	public var functionAjout:Function;
			[Bindable]	public var functionModif:Function;
			
			[Bindable]	public var bgColor:uint=0x3366F;
			
			public function init():void
			{
				if(coutSolus){
					coutTotal.text = coutSolus.cout;
					n_unite.value = Number(coutSolus.unite);
					n_metre_lineaire.value = Number(coutSolus.metre_lineaire);
					n_metre_carre.value = Number(coutSolus.metre_carre);
					n_achat.value = Number(coutSolus.achat);
					n_pose.value = Number(coutSolus.pose);									
				}else{
					coutTotal.text = String(0);
					n_unite.value=0;
					n_metre_lineaire.value=0;
					n_metre_carre.value=0;
					n_achat.value=0;
					n_pose.value=0;									
				}
				
				if(cout){
					this.visible = true;
					unite.text=cout.unite; 
					if(int(cout.unite)==0)n_unite.enabled=false;
					
					metre_lineaire.text=cout.metre_lineaire;
					if(int(cout.metre_lineaire)==0)n_metre_lineaire.enabled=false;
					
					metre_carre.text=cout.metre_carre;
					if(int(cout.metre_carre)==0)n_metre_carre.enabled=false;
					
					achat.text=cout.achat;
					if(int(cout.achat)==0)n_achat.enabled=false;
					
					pose.text=cout.pose;
					if(int(cout.pose)==0)n_pose.enabled=false;
					
					if(solution){
						refSolus.text=solution.ref; 
						libSolus.text=solution.solution;				
					}
					if(produit){
						refProd.text=produit.ref; 
						libProd.text=produit.marque+" - "+produit.modele;
					}else{
						refProd.text=""; 
						libProd.text="";						
					}
					//majQuantite();
					garde();
				}else{
					this.visible = false;
				}
			}
			private function garde():void{
				
				if(n_achat.value != 0  || n_unite.value != 0  || n_metre_lineaire.value != 0 || n_metre_carre.value != 0 || n_pose.value != 0 ){
					this.setStyle("backgroundColor","green");
					//calcule le cout total
					if(n_achat.value != 0)coutTotal.text = String(int(coutTotal.text)+(int(achat.text)*n_achat.value));
					if(n_unite.value != 0)coutTotal.text = String(int(coutTotal.text)+(int(unite.text)*n_unite.value));
					if(n_metre_lineaire.value != 0)coutTotal.text = String(int(coutTotal.text)+(int(metre_lineaire.text)*n_metre_lineaire.value));
					if(n_metre_carre.value != 0)coutTotal.text = String(int(coutTotal.text)+(int(metre_carre.text)*n_metre_carre.value));
					if(n_pose.value != 0)coutTotal.text = String(int(coutTotal.text)+(int(pose.text)*n_pose.value));
				}else{
					this.setStyle("backgroundColor",bgColor);
				}	
			}
			private function majQuantite():void{
				if(cout.save){
					n_unite.value=cout.save[0].q;
					n_metre_lineaire.value=cout.save[1].q;
					n_metre_carre.value=cout.save[2].q;
					n_achat.value=cout.save[3].q;
					n_pose.value=cout.save[4].q;									
				}
				
			}
		]]>
	</fx:Script>
	<fx:Declarations>
		<!-- Placer ici les éléments non visuels (services et objets de valeur, par exemple). -->
	</fx:Declarations>	
	<s:HGroup width="100%" verticalAlign="middle" >
		<s:Label text="" id="refSolus"/>
		<s:TextInput id="libSolus" fontSize="12" width="100%" />			
	</s:HGroup>
	<s:HGroup width="100%" verticalAlign="middle" >
		<s:Label text="" id="refProd"/>
		<s:TextInput id="libProd" fontSize="12" width="100%" />			
	</s:HGroup>		
	<s:TileGroup width="100%" orientation="columns" requestedColumnCount="5" >
		<s:VGroup >
			<s:HGroup>
				<s:Label text="unité =" />
				<s:Label text="{cout.unite}" id="unite"/>
			</s:HGroup>
			<s:NumericStepper change="garde();" id="n_unite" minimum="0" maximum="1000"  skinClass="skin.indecentmonkey.MobileNumericStepper.itemrenderer.MobileNumStepSkin"/>										
		</s:VGroup>
		<s:VGroup>
			<s:HGroup>
				<s:Label text="m. liné. =" />
				<s:Label text="{cout.metre_lineaire}" id="metre_lineaire"/>
			</s:HGroup>
			<s:NumericStepper change="garde();" id="n_metre_lineaire" minimum="0" maximum="1000" skinClass="skin.indecentmonkey.MobileNumericStepper.itemrenderer.MobileNumStepSkin"/>							
		</s:VGroup>
		<s:VGroup>
			<s:HGroup>
				<s:Label text="m. carré =" />
				<s:Label text="{cout.metre_carre}" id="metre_carre"/>
			</s:HGroup>
			<s:NumericStepper change="garde();" id="n_metre_carre" minimum="0" maximum="1000" skinClass="skin.indecentmonkey.MobileNumericStepper.itemrenderer.MobileNumStepSkin"/>							
		</s:VGroup>
		<s:VGroup>
			<s:HGroup>
				<s:Label text="achat = " />
				<s:Label text="{cout.achat}" id="achat"/>
			</s:HGroup>
			<s:NumericStepper change="garde();" id="n_achat" minimum="0" maximum="1000" skinClass="skin.indecentmonkey.MobileNumericStepper.itemrenderer.MobileNumStepSkin"/>							
		</s:VGroup>
		<s:VGroup>
			<s:HGroup>
				<s:Label text="pose =" />
				<s:Label text="{cout.pose}" id="pose"/>
			</s:HGroup>
			<s:NumericStepper change="garde();" id="n_pose" minimum="0" maximum="1000" skinClass="skin.indecentmonkey.MobileNumericStepper.itemrenderer.MobileNumStepSkin"/>									
		</s:VGroup>
	</s:TileGroup>
	<s:VGroup horizontalAlign="center" >
		<s:Label text="COUT TOTAL" />
		<s:HGroup horizontalAlign="center" verticalAlign="middle">
			<s:TextInput text="0" id="coutTotal" color="red" /><s:Label text="€ H.T."/>
			<s:Button id="btnAjouter" label="Ajouter" click="{functionAjout()}" visible="{bAjout}" />
			<s:Button id="btnModifier" label="Modifier" click="{functionModif()}" visible="{bModif}" />				
		</s:HGroup>
	</s:VGroup>
</s:VGroup>
